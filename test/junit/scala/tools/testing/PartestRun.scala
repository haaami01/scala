package scala.tools.testing

import java.io._
import java.nio.charset.StandardCharsets

import org.junit.Test

import BytecodeTesting._
import java.nio.file._
import javax.tools.ToolProvider

import scala.collection.JavaConverters._
import scala.reflect.internal.util.{AbstractFileClassLoader, BatchSourceFile}
import scala.reflect.io.VirtualDirectory
import scala.tools.nsc.reporters.{ConsoleReporter, StoreReporter}

final case class RunTest(steps: List[RunTestStep], scalaArgs: String)
final case class RunTestStep(scalaSources: List[Path], javaSources: List[Path], checkFile: Option[Path]) {
  def allSources = scalaSources ++ javaSources
}

class PartestRun extends ClearAfterClass {
  private val TestGroup = """(.*?)_(\d+)(\..+)""".r
  def readFileUTF8(p: Path) = new String(Files.readAllBytes(p), StandardCharsets.UTF_8)
  def analyzeTest(path: String): RunTest = {
    val base = Paths.get("/code/scala/test/junit") // TODO derive
    def resolve(rel: String) = base.resolve(rel).normalize()
    def fileNameIsScala(path: String) = path.endsWith(".scala")
    def fileNameIsJava(path: String) = path.endsWith(".java")
    val isScala = fileNameIsScala(path)
    val isJava = fileNameIsJava(path)
    val testName =
      if (isJava || isScala)
        path.stripSuffix(".scala").stripSuffix(".java")
      else path
    val flagsFile = resolve(testName + ".flags")
    val extraArgs = if (Files.exists(flagsFile)) readFileUTF8(flagsFile) else ""
    val compiler = newCompiler(extraArgs = extraArgs)
    val LastGroup = Int.MaxValue
    def checkFile(group: Int): Option[Path] = {
      val suffix = (if (group == LastGroup) "" else "_" + group) + ".check"
      val checkPath = base.resolve(testName + suffix).toAbsolutePath
      if (Files.exists(checkPath)) Some(checkPath) else None
    }

    val steps: List[RunTestStep] =
      if (isJava)
        RunTestStep(Nil, List(resolve(path)), checkFile(LastGroup)) :: Nil
      else if (isScala)
        RunTestStep(List(resolve(path)), Nil, checkFile(LastGroup)) :: Nil
      else {
        val files = Files.list(resolve(path)).iterator().asScala.toList
        def group(s: String): Int = s match {
          case TestGroup(start, group, extension) => group.toInt
          case _ => LastGroup
        }
        def toStep(group: Int, fs: List[Path]): RunTestStep = {
          val javas = fs.filter(p => fileNameIsJava(p.getFileName.toString))
          val scalas = fs.filter(p => fileNameIsScala(p.getFileName.toString))
          RunTestStep(scalas, javas, checkFile(group))
        }
        files.groupBy(f => group(f.getFileName.toString)).toList.sortBy(_._1).map(as => toStep(as._1, as._2))
      }
    RunTest(steps, extraArgs)
  }
  def runTest(path: String): Unit = {
    val test = analyzeTest(path)
    val out = new VirtualDirectory("out", None)
    val output = new java.lang.StringBuilder()
    def compileStep(runStep: RunTestStep): Boolean = {
      val compiler = newCompiler(extraArgs = test.scalaArgs)
      val global = compiler.global
      import global._
      val reader = new BufferedReader(new StringReader(""))
      val stringWriter = new StringWriter()
      val writer = new PrintWriter(stringWriter)
      global.reporter = new ConsoleReporter(settings, reader, writer)
      settings.outputDirs.setSingleOutput(out)
      val run = new Run
      val sources = runStep.allSources.map(p => new BatchSourceFile(p.toString, readFileUTF8(p)))
      run.compileSources(sources)
      output.append(stringWriter.toString)
      reporter.hasErrors
    }
    def compileJava(runStep: RunTestStep): Boolean = {
      val compiler = ToolProvider.getSystemJavaCompiler()
      val baos = new ByteArrayOutputStream()
      val outputStream = new BufferedOutputStream(baos)
      val result = compiler.run(null, outputStream, null, runStep.javaSources.map(_.toString) : _*)
      output.append(new String(baos.toByteArray, StandardCharsets.UTF_8))
      result == 0
    }
    var failed = false
    for (step <- test.steps if !failed) {
      failed ||= compileStep(step)
      if (!failed && step.javaSources.nonEmpty) failed ||= compileJava(step)
    }
    assert(!failed)
    val actual = output.toString

    val loader = new AbstractFileClassLoader(out, Thread.currentThread().getContextClassLoader)
    val testClass = try {
      loader.loadClass("Test")
    } catch {
      case ex: ClassNotFoundException => throw ex // TODO better error message
    }
    testClass.getMethod("main", classOf[Array[String]]).invoke(null, Array("jvm"))
  }

  @Test def `absoverride`(): Unit = runTest("../files/run/absoverride.scala")
  @Test def `abstypetags_core`(): Unit = runTest("../files/run/abstypetags_core.scala")
  @Test def `abstypetags_serialize`(): Unit = runTest("../files/run/abstypetags_serialize.scala")
  @Test def `adding-growing-set`(): Unit = runTest("../files/run/adding-growing-set.scala")
  @Test def `all-overridden`(): Unit = runTest("../files/run/all-overridden.scala")
  @Test def `amp`(): Unit = runTest("../files/run/amp.scala")
  @Test def `analyzerPlugins`(): Unit = runTest("../files/run/analyzerPlugins.scala")
  @Test def `annotatedRetyping`(): Unit = runTest("../files/run/annotatedRetyping.scala")
  @Test def `applydynamic_sip`(): Unit = runTest("../files/run/applydynamic_sip.scala")
  @Test def `array-addition`(): Unit = runTest("../files/run/array-addition.scala")
  @Test def `array-charSeq`(): Unit = runTest("../files/run/array-charSeq.scala")
  @Test def `array-existential-bound`(): Unit = runTest("../files/run/array-existential-bound.scala")
  @Test def `arrayclone-new`(): Unit = runTest("../files/run/arrayclone-new.scala")
  @Test def `arrayclone-old`(): Unit = runTest("../files/run/arrayclone-old.scala")
  @Test def `arraycopy`(): Unit = runTest("../files/run/arraycopy.scala")
  @Test def `arrays`(): Unit = runTest("../files/run/arrays.scala")
  @Test def `arrayview`(): Unit = runTest("../files/run/arrayview.scala")
  @Test def `arybufgrow`(): Unit = runTest("../files/run/arybufgrow.scala")
  @Test def `backreferences`(): Unit = runTest("../files/run/backreferences.scala")
  @Test def `bcodeInlinerMixed`(): Unit = runTest("../files/run/bcodeInlinerMixed")
  @Test def `bigDecimalCache`(): Unit = runTest("../files/run/bigDecimalCache.scala")
  @Test def `bigDecimalTest`(): Unit = runTest("../files/run/bigDecimalTest.scala")
  @Test def `bitsets`(): Unit = runTest("../files/run/bitsets.scala")
  @Test def `blame_eye_triple_eee-double`(): Unit = runTest("../files/run/blame_eye_triple_eee-double.scala")
  @Test def `blame_eye_triple_eee-float`(): Unit = runTest("../files/run/blame_eye_triple_eee-float.scala")
  @Test def `boolexprs`(): Unit = runTest("../files/run/boolexprs.scala")
  @Test def `boolord`(): Unit = runTest("../files/run/boolord.scala")
  @Test def `breakout`(): Unit = runTest("../files/run/breakout.scala")
  @Test def `bridges`(): Unit = runTest("../files/run/bridges.scala")
  @Test def `buffer-slice`(): Unit = runTest("../files/run/buffer-slice.scala")
  @Test def `bugs`(): Unit = runTest("../files/run/bugs.scala")
  @Test def `byname`(): Unit = runTest("../files/run/byname.scala")
  @Test def `bytecodecs`(): Unit = runTest("../files/run/bytecodecs.scala")
  @Test def `case-class-23`(): Unit = runTest("../files/run/case-class-23.scala")
  @Test def `caseClassEquality`(): Unit = runTest("../files/run/caseClassEquality.scala")
  @Test def `caseclasses`(): Unit = runTest("../files/run/caseclasses.scala")
  @Test def `caseClassHash`(): Unit = runTest("../files/run/caseClassHash.scala")
  @Test def `castsingleton`(): Unit = runTest("../files/run/castsingleton.scala")
  @Test def `checked`(): Unit = runTest("../files/run/checked.scala")
  @Test def `class-symbol-contravariant`(): Unit = runTest("../files/run/class-symbol-contravariant.scala")
  @Test def `classfile-format-51`(): Unit = runTest("../files/run/classfile-format-51.scala")
  @Test def `classfile-format-52`(): Unit = runTest("../files/run/classfile-format-52.scala")
  @Test def `classmanifests_new_alias`(): Unit = runTest("../files/run/classmanifests_new_alias.scala")
  @Test def `classmanifests_new_core`(): Unit = runTest("../files/run/classmanifests_new_core.scala")
  @Test def `classof`(): Unit = runTest("../files/run/classof.scala")
  @Test def `classtags_contextbound`(): Unit = runTest("../files/run/classtags_contextbound.scala")
  @Test def `classtags_core`(): Unit = runTest("../files/run/classtags_core.scala")
  @Test def `classtags_multi`(): Unit = runTest("../files/run/classtags_multi.scala")
  @Test def `collection-conversions`(): Unit = runTest("../files/run/collection-conversions.scala")
  @Test def `collection-stacks`(): Unit = runTest("../files/run/collection-stacks.scala")
  @Test def `collections-toSelf`(): Unit = runTest("../files/run/collections-toSelf.scala")
  @Test def `collections`(): Unit = runTest("../files/run/collections.scala")
  @Test def `colltest`(): Unit = runTest("../files/run/colltest.scala")
  @Test def `colltest1`(): Unit = runTest("../files/run/colltest1.scala")
  @Test def `comparable-comparator`(): Unit = runTest("../files/run/comparable-comparator.scala")
  @Test def `compiler-asSeenFrom`(): Unit = runTest("../files/run/compiler-asSeenFrom.scala")
  @Test def `complicatedmatch`(): Unit = runTest("../files/run/complicatedmatch.scala")
  @Test def `concat-two-strings`(): Unit = runTest("../files/run/concat-two-strings.scala")
  @Test def `concurrent-map-conversions`(): Unit = runTest("../files/run/concurrent-map-conversions.scala")
  @Test def `constant-optimization`(): Unit = runTest("../files/run/constant-optimization.scala")
  @Test def `constant-type`(): Unit = runTest("../files/run/constant-type.scala")
  @Test def `constrained-types`(): Unit = runTest("../files/run/constrained-types.scala")
  @Test def `constructors`(): Unit = runTest("../files/run/constructors.scala")
  @Test def `contrib674`(): Unit = runTest("../files/run/contrib674.scala")
  @Test def `Course-2002-01`(): Unit = runTest("../files/run/Course-2002-01.scala")
  @Test def `Course-2002-02`(): Unit = runTest("../files/run/Course-2002-02.scala")
  @Test def `Course-2002-03`(): Unit = runTest("../files/run/Course-2002-03.scala")
  @Test def `Course-2002-04`(): Unit = runTest("../files/run/Course-2002-04.scala")
  @Test def `Course-2002-05`(): Unit = runTest("../files/run/Course-2002-05.scala")
  @Test def `Course-2002-06`(): Unit = runTest("../files/run/Course-2002-06.scala")
  @Test def `Course-2002-07`(): Unit = runTest("../files/run/Course-2002-07.scala")
  @Test def `Course-2002-08`(): Unit = runTest("../files/run/Course-2002-08.scala")
  @Test def `Course-2002-09`(): Unit = runTest("../files/run/Course-2002-09.scala")
  @Test def `Course-2002-10`(): Unit = runTest("../files/run/Course-2002-10.scala")
  @Test def `Course-2002-13`(): Unit = runTest("../files/run/Course-2002-13.scala")
  @Test def `ctor-order`(): Unit = runTest("../files/run/ctor-order.scala")
  @Test def `ctries-new`(): Unit = runTest("../files/run/ctries-new")
  @Test def `ctries-old`(): Unit = runTest("../files/run/ctries-old")
  @Test def `dead-code-elimination`(): Unit = runTest("../files/run/dead-code-elimination.scala")
  @Test def `deeps`(): Unit = runTest("../files/run/deeps.scala")
  @Test def `delambdafy-dependent-on-param-subst-2`(): Unit = runTest("../files/run/delambdafy-dependent-on-param-subst-2.scala")
  @Test def `delambdafy-dependent-on-param-subst`(): Unit = runTest("../files/run/delambdafy-dependent-on-param-subst.scala")
  @Test def `delambdafy-nested-by-name`(): Unit = runTest("../files/run/delambdafy-nested-by-name.scala")
  @Test def `delambdafy-two-lambdas`(): Unit = runTest("../files/run/delambdafy-two-lambdas.scala")
  @Test def `delambdafy_t6028`(): Unit = runTest("../files/run/delambdafy_t6028.scala")
  @Test def `delambdafy_t6555`(): Unit = runTest("../files/run/delambdafy_t6555.scala")
  @Test def `delambdafy_uncurry_byname_inline`(): Unit = runTest("../files/run/delambdafy_uncurry_byname_inline.scala")
  @Test def `delambdafy_uncurry_byname_method`(): Unit = runTest("../files/run/delambdafy_uncurry_byname_method.scala")
  @Test def `delambdafy_uncurry_inline`(): Unit = runTest("../files/run/delambdafy_uncurry_inline.scala")
  @Test def `delambdafy_uncurry_method`(): Unit = runTest("../files/run/delambdafy_uncurry_method.scala")
  @Test def `delay-bad`(): Unit = runTest("../files/run/delay-bad.scala")
  @Test def `delay-good`(): Unit = runTest("../files/run/delay-good.scala")
  @Test def `deprecate-early-type-defs`(): Unit = runTest("../files/run/deprecate-early-type-defs.scala")
  @Test def `disable-assertions`(): Unit = runTest("../files/run/disable-assertions.scala")
  @Test def `distinct`(): Unit = runTest("../files/run/distinct.scala")
  @Test def `duplicate-meth`(): Unit = runTest("../files/run/duplicate-meth.scala")
  @Test def `duration-coarsest`(): Unit = runTest("../files/run/duration-coarsest.scala")
  @Test def `dynamic-anyval`(): Unit = runTest("../files/run/dynamic-anyval.scala")
  @Test def `dynamic-applyDynamic`(): Unit = runTest("../files/run/dynamic-applyDynamic.scala")
  @Test def `dynamic-applyDynamicNamed`(): Unit = runTest("../files/run/dynamic-applyDynamicNamed.scala")
  @Test def `dynamic-selectDynamic`(): Unit = runTest("../files/run/dynamic-selectDynamic.scala")
  @Test def `dynamic-updateDynamic`(): Unit = runTest("../files/run/dynamic-updateDynamic.scala")
  @Test def `elidable-noflags`(): Unit = runTest("../files/run/elidable-noflags.scala")
  @Test def `elidable-opt`(): Unit = runTest("../files/run/elidable-opt.scala")
  @Test def `elidable`(): Unit = runTest("../files/run/elidable.scala")
  @Test def `empty-array`(): Unit = runTest("../files/run/empty-array.scala")
  @Test def `emptypf`(): Unit = runTest("../files/run/emptypf.scala")
  @Test def `enrich-gentraversable`(): Unit = runTest("../files/run/enrich-gentraversable.scala")
  @Test def `enums`(): Unit = runTest("../files/run/enums.scala")
  @Test def `equality`(): Unit = runTest("../files/run/equality.scala")
  @Test def `eta-expand-star`(): Unit = runTest("../files/run/eta-expand-star.scala")
  @Test def `eta-expand-star2`(): Unit = runTest("../files/run/eta-expand-star2.scala")
  @Test def `exc`(): Unit = runTest("../files/run/exc.scala")
  @Test def `exc1`(): Unit = runTest("../files/run/exc1.scala")
  @Test def `exc2`(): Unit = runTest("../files/run/exc2.scala")
  @Test def `exceptions-2`(): Unit = runTest("../files/run/exceptions-2.scala")
  @Test def `exceptions-nest`(): Unit = runTest("../files/run/exceptions-nest.scala")
  @Test def `exceptions`(): Unit = runTest("../files/run/exceptions.scala")
  @Test def `existential-rangepos`(): Unit = runTest("../files/run/existential-rangepos.scala")
  @Test def `existentials-in-compiler`(): Unit = runTest("../files/run/existentials-in-compiler.scala")
  @Test def `existentials`(): Unit = runTest("../files/run/existentials.scala")
  @Test def `existentials3-new`(): Unit = runTest("../files/run/existentials3-new.scala")
  @Test def `existentials3-old`(): Unit = runTest("../files/run/existentials3-old.scala")
  @Test def `exoticnames`(): Unit = runTest("../files/run/exoticnames.scala")
  @Test def `exprs_serialize`(): Unit = runTest("../files/run/exprs_serialize.scala")
  @Test def `fail-non-value-types`(): Unit = runTest("../files/run/fail-non-value-types.scala")
  @Test def `finally`(): Unit = runTest("../files/run/finally.scala")
  @Test def `finalvar`(): Unit = runTest("../files/run/finalvar.scala")
  @Test def `flat-flat-flat`(): Unit = runTest("../files/run/flat-flat-flat.scala")
  @Test def `fors`(): Unit = runTest("../files/run/fors.scala")
  @Test def `forvaleq`(): Unit = runTest("../files/run/forvaleq.scala")
  @Test def `freetypes_false_alarm1`(): Unit = runTest("../files/run/freetypes_false_alarm1.scala")
  @Test def `freetypes_false_alarm2`(): Unit = runTest("../files/run/freetypes_false_alarm2.scala")
  @Test def `function-null-unbox`(): Unit = runTest("../files/run/function-null-unbox.scala")
  @Test def `future-flatmap-exec-count`(): Unit = runTest("../files/run/future-flatmap-exec-count.scala")
  @Test def `gadts`(): Unit = runTest("../files/run/gadts.scala")
  @Test def `genericValueClass`(): Unit = runTest("../files/run/genericValueClass.scala")
  @Test def `getClassTest-new`(): Unit = runTest("../files/run/getClassTest-new.scala")
  @Test def `getClassTest-old`(): Unit = runTest("../files/run/getClassTest-old.scala")
  @Test def `getClassTest-valueClass`(): Unit = runTest("../files/run/getClassTest-valueClass.scala")
  @Test def `global-showdef`(): Unit = runTest("../files/run/global-showdef.scala")
  @Test def `groupby`(): Unit = runTest("../files/run/groupby.scala")
  @Test def `hashCodeDistribution`(): Unit = runTest("../files/run/hashCodeDistribution.scala")
  @Test def `hashCodeStatics`(): Unit = runTest("../files/run/hashCodeStatics.scala")
  @Test def `hashhash`(): Unit = runTest("../files/run/hashhash.scala")
  @Test def `hashset`(): Unit = runTest("../files/run/hashset.scala")
  @Test def `hashsetremove`(): Unit = runTest("../files/run/hashsetremove.scala")
  @Test def `icode-reader-dead-code`(): Unit = runTest("../files/run/icode-reader-dead-code.scala")
  @Test def `idempotency-case-classes`(): Unit = runTest("../files/run/idempotency-case-classes.scala")
  @Test def `idempotency-extractors`(): Unit = runTest("../files/run/idempotency-extractors.scala")
  @Test def `idempotency-labels`(): Unit = runTest("../files/run/idempotency-labels.scala")
  @Test def `idempotency-lazy-vals`(): Unit = runTest("../files/run/idempotency-lazy-vals.scala")
  @Test def `idempotency-this`(): Unit = runTest("../files/run/idempotency-this.scala")
  @Test def `imain`(): Unit = runTest("../files/run/imain.scala")
  @Test def `impconvtimes`(): Unit = runTest("../files/run/impconvtimes.scala")
  @Test def `implicitclasses`(): Unit = runTest("../files/run/implicitclasses.scala")
  @Test def `implicits`(): Unit = runTest("../files/run/implicits.scala")
  @Test def `imports`(): Unit = runTest("../files/run/imports.scala")
  @Test def `indexedSeq-apply`(): Unit = runTest("../files/run/indexedSeq-apply.scala")
  @Test def `indexedSeq`(): Unit = runTest("../files/run/indexedSeq.scala")
  @Test def `indy-via-macro`(): Unit = runTest("../files/run/indy-via-macro")
  @Test def `indy-via-macro-with-dynamic-args`(): Unit = runTest("../files/run/indy-via-macro-with-dynamic-args")
  @Test def `indylambda-boxing`(): Unit = runTest("../files/run/indylambda-boxing")
  @Test def `inferred-type-constructors`(): Unit = runTest("../files/run/inferred-type-constructors.scala")
  @Test def `infiniteloop`(): Unit = runTest("../files/run/infiniteloop.scala")
  @Test def `infix`(): Unit = runTest("../files/run/infix.scala")
  @Test def `inlineAddDeserializeLambda`(): Unit = runTest("../files/run/inlineAddDeserializeLambda.scala")
  @Test def `inlineHandlers`(): Unit = runTest("../files/run/inlineHandlers.scala")
  @Test def `inliner-infer`(): Unit = runTest("../files/run/inliner-infer.scala")
  @Test def `inner-obj-auto`(): Unit = runTest("../files/run/inner-obj-auto.scala")
  @Test def `interop_classtags_are_classmanifests`(): Unit = runTest("../files/run/interop_classtags_are_classmanifests.scala")
  @Test def `interop_manifests_are_abstypetags`(): Unit = runTest("../files/run/interop_manifests_are_abstypetags.scala")
  @Test def `interop_manifests_are_classtags`(): Unit = runTest("../files/run/interop_manifests_are_classtags.scala")
  @Test def `interop_manifests_are_typetags`(): Unit = runTest("../files/run/interop_manifests_are_typetags.scala")
  @Test def `interop_typetags_are_manifests`(): Unit = runTest("../files/run/interop_typetags_are_manifests.scala")
  @Test def `interpolation`(): Unit = runTest("../files/run/interpolation.scala")
  @Test def `interpolationArgs`(): Unit = runTest("../files/run/interpolationArgs.scala")
  @Test def `interpolationMultiline1`(): Unit = runTest("../files/run/interpolationMultiline1.scala")
  @Test def `interpolationMultiline2`(): Unit = runTest("../files/run/interpolationMultiline2.scala")
  @Test def `intmap`(): Unit = runTest("../files/run/intmap.scala")
  @Test def `iq`(): Unit = runTest("../files/run/iq.scala")
  @Test def `is-valid-num`(): Unit = runTest("../files/run/is-valid-num.scala")
  @Test def `issue192`(): Unit = runTest("../files/run/issue192.scala")
  @Test def `iterables`(): Unit = runTest("../files/run/iterables.scala")
  @Test def `iterator-from`(): Unit = runTest("../files/run/iterator-from.scala")
  @Test def `iterator3444`(): Unit = runTest("../files/run/iterator3444.scala")
  @Test def `java-erasure`(): Unit = runTest("../files/run/java-erasure.scala")
  @Test def `kind-repl-command`(): Unit = runTest("../files/run/kind-repl-command.scala")
  @Test def `kmpSliceSearch`(): Unit = runTest("../files/run/kmpSliceSearch.scala")
  @Test def `lambda-serialization-gc`(): Unit = runTest("../files/run/lambda-serialization-gc.scala")
  @Test def `lambda-serialization`(): Unit = runTest("../files/run/lambda-serialization.scala")
  @Test def `large_class`(): Unit = runTest("../files/run/large_class.scala")
  @Test def `large_code`(): Unit = runTest("../files/run/large_code.scala")
  @Test def `lazy-concurrent`(): Unit = runTest("../files/run/lazy-concurrent.scala")
  @Test def `lazy-exprs`(): Unit = runTest("../files/run/lazy-exprs.scala")
  @Test def `lazy-leaks`(): Unit = runTest("../files/run/lazy-leaks.scala")
  @Test def `lazy-locals`(): Unit = runTest("../files/run/lazy-locals.scala")
  @Test def `lazy-override-run`(): Unit = runTest("../files/run/lazy-override-run.scala")
  @Test def `lazy-traits`(): Unit = runTest("../files/run/lazy-traits.scala")
  @Test def `lift-and-unlift`(): Unit = runTest("../files/run/lift-and-unlift.scala")
  @Test def `lisp`(): Unit = runTest("../files/run/lisp.scala")
  @Test def `list_map`(): Unit = runTest("../files/run/list_map.scala")
  @Test def `lists-run`(): Unit = runTest("../files/run/lists-run.scala")
  @Test def `literals`(): Unit = runTest("../files/run/literals.scala")
  @Test def `longmap`(): Unit = runTest("../files/run/longmap.scala")
  @Test def `lub-visibility`(): Unit = runTest("../files/run/lub-visibility.scala")
  @Test def `macro-abort-fresh`(): Unit = runTest("../files/run/macro-abort-fresh")
  @Test def `macro-auto-duplicate`(): Unit = runTest("../files/run/macro-auto-duplicate")
  @Test def `macro-basic-ma-md-mi`(): Unit = runTest("../files/run/macro-basic-ma-md-mi")
  @Test def `macro-basic-ma-mdmi`(): Unit = runTest("../files/run/macro-basic-ma-mdmi")
  @Test def `macro-basic-mamd-mi`(): Unit = runTest("../files/run/macro-basic-mamd-mi")
  @Test def `macro-blackbox-materialization`(): Unit = runTest("../files/run/macro-blackbox-materialization")
  @Test def `macro-bodyexpandstoimpl`(): Unit = runTest("../files/run/macro-bodyexpandstoimpl")
  @Test def `macro-bundle-context-alias`(): Unit = runTest("../files/run/macro-bundle-context-alias")
  @Test def `macro-bundle-context-refinement`(): Unit = runTest("../files/run/macro-bundle-context-refinement")
  @Test def `macro-bundle-repl`(): Unit = runTest("../files/run/macro-bundle-repl.scala")
  @Test def `macro-bundle-static`(): Unit = runTest("../files/run/macro-bundle-static")
  @Test def `macro-bundle-toplevel`(): Unit = runTest("../files/run/macro-bundle-toplevel")
  @Test def `macro-bundle-whitebox-decl`(): Unit = runTest("../files/run/macro-bundle-whitebox-decl")
  @Test def `macro-bundle-whitebox-use-raw`(): Unit = runTest("../files/run/macro-bundle-whitebox-use-raw")
  @Test def `macro-bundle-whitebox-use-refined`(): Unit = runTest("../files/run/macro-bundle-whitebox-use-refined")
  @Test def `macro-def-path-dependent`(): Unit = runTest("../files/run/macro-def-path-dependent")
  @Test def `macro-default-params`(): Unit = runTest("../files/run/macro-default-params")
  @Test def `macro-divergence-spurious`(): Unit = runTest("../files/run/macro-divergence-spurious")
  @Test def `macro-duplicate`(): Unit = runTest("../files/run/macro-duplicate")
  @Test def `macro-enclosingowner-detectvar`(): Unit = runTest("../files/run/macro-enclosingowner-detectvar")
  @Test def `macro-enclosingowner-sbt`(): Unit = runTest("../files/run/macro-enclosingowner-sbt")
  @Test def `macro-enclosures`(): Unit = runTest("../files/run/macro-enclosures")
  @Test def `macro-expand-implicit-argument`(): Unit = runTest("../files/run/macro-expand-implicit-argument")
  @Test def `macro-expand-implicit-macro-has-implicit`(): Unit = runTest("../files/run/macro-expand-implicit-macro-has-implicit")
  @Test def `macro-expand-implicit-macro-is-implicit`(): Unit = runTest("../files/run/macro-expand-implicit-macro-is-implicit")
  @Test def `macro-expand-implicit-macro-is-val`(): Unit = runTest("../files/run/macro-expand-implicit-macro-is-val")
  @Test def `macro-expand-implicit-macro-is-view`(): Unit = runTest("../files/run/macro-expand-implicit-macro-is-view")
  @Test def `macro-expand-multiple-arglists`(): Unit = runTest("../files/run/macro-expand-multiple-arglists")
  @Test def `macro-expand-nullary-generic`(): Unit = runTest("../files/run/macro-expand-nullary-generic")
  @Test def `macro-expand-nullary-nongeneric`(): Unit = runTest("../files/run/macro-expand-nullary-nongeneric")
  @Test def `macro-expand-overload`(): Unit = runTest("../files/run/macro-expand-overload")
  @Test def `macro-expand-override`(): Unit = runTest("../files/run/macro-expand-override")
  @Test def `macro-expand-recursive`(): Unit = runTest("../files/run/macro-expand-recursive")
  @Test def `macro-expand-tparams-bounds`(): Unit = runTest("../files/run/macro-expand-tparams-bounds")
  @Test def `macro-expand-tparams-explicit`(): Unit = runTest("../files/run/macro-expand-tparams-explicit")
  @Test def `macro-expand-tparams-implicit`(): Unit = runTest("../files/run/macro-expand-tparams-implicit")
  @Test def `macro-expand-tparams-prefix`(): Unit = runTest("../files/run/macro-expand-tparams-prefix")
  @Test def `macro-expand-unapply-a`(): Unit = runTest("../files/run/macro-expand-unapply-a")
  @Test def `macro-expand-varargs-explicit-over-nonvarargs-bad`(): Unit = runTest("../files/run/macro-expand-varargs-explicit-over-nonvarargs-bad")
  @Test def `macro-expand-varargs-explicit-over-nonvarargs-good`(): Unit = runTest("../files/run/macro-expand-varargs-explicit-over-nonvarargs-good")
  @Test def `macro-expand-varargs-explicit-over-varargs`(): Unit = runTest("../files/run/macro-expand-varargs-explicit-over-varargs")
  @Test def `macro-expand-varargs-implicit-over-nonvarargs`(): Unit = runTest("../files/run/macro-expand-varargs-implicit-over-nonvarargs")
  @Test def `macro-expand-varargs-implicit-over-varargs`(): Unit = runTest("../files/run/macro-expand-varargs-implicit-over-varargs")
  @Test def `macro-impl-default-params`(): Unit = runTest("../files/run/macro-impl-default-params")
  @Test def `macro-impl-relaxed`(): Unit = runTest("../files/run/macro-impl-relaxed")
  @Test def `macro-impl-rename-context`(): Unit = runTest("../files/run/macro-impl-rename-context")
  @Test def `macro-impl-tparam-only-in-impl`(): Unit = runTest("../files/run/macro-impl-tparam-only-in-impl")
  @Test def `macro-impl-tparam-typetag-is-optional`(): Unit = runTest("../files/run/macro-impl-tparam-typetag-is-optional")
  @Test def `macro-invalidret-doesnt-conform-to-def-rettype`(): Unit = runTest("../files/run/macro-invalidret-doesnt-conform-to-def-rettype")
  @Test def `macro-invalidret-nontypeable`(): Unit = runTest("../files/run/macro-invalidret-nontypeable")
  @Test def `macro-invalidusage-badret`(): Unit = runTest("../files/run/macro-invalidusage-badret")
  @Test def `macro-invalidusage-partialapplication`(): Unit = runTest("../files/run/macro-invalidusage-partialapplication")
  @Test def `macro-invalidusage-partialapplication-with-tparams`(): Unit = runTest("../files/run/macro-invalidusage-partialapplication-with-tparams")
  @Test def `macro-openmacros`(): Unit = runTest("../files/run/macro-openmacros")
  @Test def `macro-parse-position`(): Unit = runTest("../files/run/macro-parse-position")
  @Test def `macro-parse-position-malformed`(): Unit = runTest("../files/run/macro-parse-position-malformed")
  @Test def `macro-quasiinvalidbody-c`(): Unit = runTest("../files/run/macro-quasiinvalidbody-c")
  @Test def `macro-quasiquotes`(): Unit = runTest("../files/run/macro-quasiquotes")
  @Test def `macro-range`(): Unit = runTest("../files/run/macro-range")
  @Test def `macro-rangepos-args`(): Unit = runTest("../files/run/macro-rangepos-args")
  @Test def `macro-rangepos-subpatterns`(): Unit = runTest("../files/run/macro-rangepos-subpatterns")
  @Test def `macro-reflective-ma-normal-mdmi`(): Unit = runTest("../files/run/macro-reflective-ma-normal-mdmi")
  @Test def `macro-reflective-mamd-normal-mi`(): Unit = runTest("../files/run/macro-reflective-mamd-normal-mi")
  @Test def `macro-reify-abstypetag-notypeparams`(): Unit = runTest("../files/run/macro-reify-abstypetag-notypeparams")
  @Test def `macro-reify-abstypetag-typeparams-notags`(): Unit = runTest("../files/run/macro-reify-abstypetag-typeparams-notags")
  @Test def `macro-reify-abstypetag-typeparams-tags`(): Unit = runTest("../files/run/macro-reify-abstypetag-typeparams-tags")
  @Test def `macro-reify-abstypetag-usetypetag`(): Unit = runTest("../files/run/macro-reify-abstypetag-usetypetag")
  @Test def `macro-reify-basic`(): Unit = runTest("../files/run/macro-reify-basic")
  @Test def `macro-reify-chained1`(): Unit = runTest("../files/run/macro-reify-chained1")
  @Test def `macro-reify-chained2`(): Unit = runTest("../files/run/macro-reify-chained2")
  @Test def `macro-reify-freevars`(): Unit = runTest("../files/run/macro-reify-freevars")
  @Test def `macro-reify-nested-a1`(): Unit = runTest("../files/run/macro-reify-nested-a1")
  @Test def `macro-reify-nested-a2`(): Unit = runTest("../files/run/macro-reify-nested-a2")
  @Test def `macro-reify-nested-b1`(): Unit = runTest("../files/run/macro-reify-nested-b1")
  @Test def `macro-reify-nested-b2`(): Unit = runTest("../files/run/macro-reify-nested-b2")
  @Test def `macro-reify-ref-to-packageless`(): Unit = runTest("../files/run/macro-reify-ref-to-packageless")
  @Test def `macro-reify-splice-outside-reify`(): Unit = runTest("../files/run/macro-reify-splice-outside-reify")
  @Test def `macro-reify-staticXXX`(): Unit = runTest("../files/run/macro-reify-staticXXX")
  @Test def `macro-reify-tagful-a`(): Unit = runTest("../files/run/macro-reify-tagful-a")
  @Test def `macro-reify-tagless-a`(): Unit = runTest("../files/run/macro-reify-tagless-a")
  @Test def `macro-reify-type`(): Unit = runTest("../files/run/macro-reify-type")
  @Test def `macro-reify-typetag-notypeparams`(): Unit = runTest("../files/run/macro-reify-typetag-notypeparams")
  @Test def `macro-reify-typetag-typeparams-tags`(): Unit = runTest("../files/run/macro-reify-typetag-typeparams-tags")
  @Test def `macro-reify-unreify`(): Unit = runTest("../files/run/macro-reify-unreify")
  @Test def `macro-repl-basic`(): Unit = runTest("../files/run/macro-repl-basic.scala")
  @Test def `macro-repl-dontexpand`(): Unit = runTest("../files/run/macro-repl-dontexpand.scala")
  @Test def `macro-settings`(): Unit = runTest("../files/run/macro-settings")
  @Test def `macro-sip19`(): Unit = runTest("../files/run/macro-sip19")
  @Test def `macro-sip19-revised`(): Unit = runTest("../files/run/macro-sip19-revised")
  @Test def `macro-subpatterns`(): Unit = runTest("../files/run/macro-subpatterns")
  @Test def `macro-system-properties`(): Unit = runTest("../files/run/macro-system-properties.scala")
  @Test def `macro-term-declared-in-annotation`(): Unit = runTest("../files/run/macro-term-declared-in-annotation")
  @Test def `macro-term-declared-in-anonymous`(): Unit = runTest("../files/run/macro-term-declared-in-anonymous")
  @Test def `macro-term-declared-in-block`(): Unit = runTest("../files/run/macro-term-declared-in-block")
  @Test def `macro-term-declared-in-class`(): Unit = runTest("../files/run/macro-term-declared-in-class")
  @Test def `macro-term-declared-in-class-class`(): Unit = runTest("../files/run/macro-term-declared-in-class-class")
  @Test def `macro-term-declared-in-class-object`(): Unit = runTest("../files/run/macro-term-declared-in-class-object")
  @Test def `macro-term-declared-in-default-param`(): Unit = runTest("../files/run/macro-term-declared-in-default-param")
  @Test def `macro-term-declared-in-implicit-class`(): Unit = runTest("../files/run/macro-term-declared-in-implicit-class")
  @Test def `macro-term-declared-in-method`(): Unit = runTest("../files/run/macro-term-declared-in-method")
  @Test def `macro-term-declared-in-object`(): Unit = runTest("../files/run/macro-term-declared-in-object")
  @Test def `macro-term-declared-in-object-class`(): Unit = runTest("../files/run/macro-term-declared-in-object-class")
  @Test def `macro-term-declared-in-object-object`(): Unit = runTest("../files/run/macro-term-declared-in-object-object")
  @Test def `macro-term-declared-in-package-object`(): Unit = runTest("../files/run/macro-term-declared-in-package-object")
  @Test def `macro-term-declared-in-refinement`(): Unit = runTest("../files/run/macro-term-declared-in-refinement")
  @Test def `macro-term-declared-in-trait`(): Unit = runTest("../files/run/macro-term-declared-in-trait")
  @Test def `macro-typecheck-implicitsdisabled`(): Unit = runTest("../files/run/macro-typecheck-implicitsdisabled")
  @Test def `macro-typecheck-macrosdisabled`(): Unit = runTest("../files/run/macro-typecheck-macrosdisabled")
  @Test def `macro-typecheck-macrosdisabled2`(): Unit = runTest("../files/run/macro-typecheck-macrosdisabled2")
  @Test def `macro-undetparams-consfromsls`(): Unit = runTest("../files/run/macro-undetparams-consfromsls")
  @Test def `macro-undetparams-implicitval`(): Unit = runTest("../files/run/macro-undetparams-implicitval")
  @Test def `macro-undetparams-macroitself`(): Unit = runTest("../files/run/macro-undetparams-macroitself")
  @Test def `macro-vampire-false-warning`(): Unit = runTest("../files/run/macro-vampire-false-warning")
  @Test def `macro-whitebox-dynamic-materialization`(): Unit = runTest("../files/run/macro-whitebox-dynamic-materialization")
  @Test def `macro-whitebox-extractor`(): Unit = runTest("../files/run/macro-whitebox-extractor")
  @Test def `macro-whitebox-fundep-materialization`(): Unit = runTest("../files/run/macro-whitebox-fundep-materialization")
  @Test def `macro-whitebox-structural`(): Unit = runTest("../files/run/macro-whitebox-structural")
  @Test def `macroPlugins-enterStats`(): Unit = runTest("../files/run/macroPlugins-enterStats.scala")
  @Test def `macroPlugins-isBlackbox`(): Unit = runTest("../files/run/macroPlugins-isBlackbox")
  @Test def `macroPlugins-macroArgs`(): Unit = runTest("../files/run/macroPlugins-macroArgs")
  @Test def `macroPlugins-macroExpand`(): Unit = runTest("../files/run/macroPlugins-macroExpand")
  @Test def `macroPlugins-macroRuntime`(): Unit = runTest("../files/run/macroPlugins-macroRuntime")
  @Test def `macroPlugins-namerHooks`(): Unit = runTest("../files/run/macroPlugins-namerHooks.scala")
  @Test def `macroPlugins-typedMacroBody`(): Unit = runTest("../files/run/macroPlugins-typedMacroBody")
  @Test def `manifests-new`(): Unit = runTest("../files/run/manifests-new.scala")
  @Test def `manifests-old`(): Unit = runTest("../files/run/manifests-old.scala")
  @Test def `manifests-undeprecated-in-2.10.0`(): Unit = runTest("../files/run/manifests-undeprecated-in-2.10.0.scala")
  @Test def `map_java_conversions`(): Unit = runTest("../files/run/map_java_conversions.scala")
  @Test def `map_test`(): Unit = runTest("../files/run/map_test.scala")
  @Test def `mapConserve`(): Unit = runTest("../files/run/mapConserve.scala")
  @Test def `mapValues`(): Unit = runTest("../files/run/mapValues.scala")
  @Test def `matcharraytail`(): Unit = runTest("../files/run/matcharraytail.scala")
  @Test def `matchbytes`(): Unit = runTest("../files/run/matchbytes.scala")
  @Test def `matchemptyarray`(): Unit = runTest("../files/run/matchemptyarray.scala")
  @Test def `matchintasany`(): Unit = runTest("../files/run/matchintasany.scala")
  @Test def `matchnull`(): Unit = runTest("../files/run/matchnull.scala")
  @Test def `matchonseq`(): Unit = runTest("../files/run/matchonseq.scala")
  @Test def `matchonstream`(): Unit = runTest("../files/run/matchonstream.scala")
  @Test def `memberpos`(): Unit = runTest("../files/run/memberpos.scala")
  @Test def `Meter`(): Unit = runTest("../files/run/Meter.scala")
  @Test def `MeterCaseClass`(): Unit = runTest("../files/run/MeterCaseClass.scala")
  @Test def `mirror_symbolof_x`(): Unit = runTest("../files/run/mirror_symbolof_x.scala")
  @Test def `misc`(): Unit = runTest("../files/run/misc.scala")
  @Test def `missingparams`(): Unit = runTest("../files/run/missingparams.scala")
  @Test def `mixin-bridge-methods`(): Unit = runTest("../files/run/mixin-bridge-methods.scala")
  @Test def `mixin-signatures`(): Unit = runTest("../files/run/mixin-signatures.scala")
  @Test def `mixins`(): Unit = runTest("../files/run/mixins.scala")
  @Test def `multi-array`(): Unit = runTest("../files/run/multi-array.scala")
  @Test def `mutable-treeset`(): Unit = runTest("../files/run/mutable-treeset.scala")
  @Test def `MutableListTest`(): Unit = runTest("../files/run/MutableListTest.scala")
  @Test def `name-based-patmat`(): Unit = runTest("../files/run/name-based-patmat.scala")
  @Test def `names-defaults`(): Unit = runTest("../files/run/names-defaults.scala")
  @Test def `NestedClasses`(): Unit = runTest("../files/run/NestedClasses.scala")
  @Test def `newTags`(): Unit = runTest("../files/run/newTags.scala")
  @Test def `no-pickle-skolems`(): Unit = runTest("../files/run/no-pickle-skolems")
  @Test def `noInlineUnknownIndy`(): Unit = runTest("../files/run/noInlineUnknownIndy")
  @Test def `nonlocalreturn`(): Unit = runTest("../files/run/nonlocalreturn.scala")
  @Test def `nothingTypeDce`(): Unit = runTest("../files/run/nothingTypeDce.scala")
  @Test def `nothingTypeNoOpt`(): Unit = runTest("../files/run/nothingTypeNoOpt.scala")
  @Test def `null-and-intersect`(): Unit = runTest("../files/run/null-and-intersect.scala")
  @Test def `null-hash`(): Unit = runTest("../files/run/null-hash.scala")
  @Test def `nullable-lazyvals`(): Unit = runTest("../files/run/nullable-lazyvals.scala")
  @Test def `number-parsing`(): Unit = runTest("../files/run/number-parsing.scala")
  @Test def `numbereq`(): Unit = runTest("../files/run/numbereq.scala")
  @Test def `numeric-range`(): Unit = runTest("../files/run/numeric-range.scala")
  @Test def `optimizer-array-load`(): Unit = runTest("../files/run/optimizer-array-load.scala")
  @Test def `option-fold`(): Unit = runTest("../files/run/option-fold.scala")
  @Test def `OrderingTest`(): Unit = runTest("../files/run/OrderingTest.scala")
  @Test def `outertest`(): Unit = runTest("../files/run/outertest.scala")
  @Test def `overloads`(): Unit = runTest("../files/run/overloads.scala")
  @Test def `parmap-ops`(): Unit = runTest("../files/run/parmap-ops.scala")
  @Test def `partialfun`(): Unit = runTest("../files/run/partialfun.scala")
  @Test def `patch-boundary`(): Unit = runTest("../files/run/patch-boundary.scala")
  @Test def `patmat-behavior-2`(): Unit = runTest("../files/run/patmat-behavior-2.scala")
  @Test def `patmat-behavior`(): Unit = runTest("../files/run/patmat-behavior.scala")
  @Test def `patmat-bind-typed`(): Unit = runTest("../files/run/patmat-bind-typed.scala")
  @Test def `patmat-exprs`(): Unit = runTest("../files/run/patmat-exprs.scala")
  @Test def `patmat-finally`(): Unit = runTest("../files/run/patmat-finally.scala")
  @Test def `patmat-mix-case-extractor`(): Unit = runTest("../files/run/patmat-mix-case-extractor.scala")
  @Test def `patmat-seqs`(): Unit = runTest("../files/run/patmat-seqs.scala")
  @Test def `patmat_unapp_abstype-new`(): Unit = runTest("../files/run/patmat_unapp_abstype-new.scala")
  @Test def `patmatnew`(): Unit = runTest("../files/run/patmatnew.scala")
  @Test def `pc-conversions`(): Unit = runTest("../files/run/pc-conversions.scala")
  @Test def `pf-catch`(): Unit = runTest("../files/run/pf-catch.scala")
  @Test def `phantomValueClass`(): Unit = runTest("../files/run/phantomValueClass.scala")
  @Test def `position-val-def`(): Unit = runTest("../files/run/position-val-def.scala")
  @Test def `predef-cycle`(): Unit = runTest("../files/run/predef-cycle.scala")
  @Test def `Predef.readLine`(): Unit = runTest("../files/run/Predef.readLine.scala")
  @Test def `preinits`(): Unit = runTest("../files/run/preinits.scala")
  @Test def `primitive-sigs-2-new`(): Unit = runTest("../files/run/primitive-sigs-2-new.scala")
  @Test def `primitive-sigs-2-old`(): Unit = runTest("../files/run/primitive-sigs-2-old.scala")
  @Test def `programmatic-main`(): Unit = runTest("../files/run/programmatic-main.scala")
  @Test def `promotion`(): Unit = runTest("../files/run/promotion.scala")
  @Test def `proxy`(): Unit = runTest("../files/run/proxy.scala")
  @Test def `pure-args-byname-noinline`(): Unit = runTest("../files/run/pure-args-byname-noinline.scala")
  @Test def `QueueTest`(): Unit = runTest("../files/run/QueueTest.scala")
  @Test def `range-unit`(): Unit = runTest("../files/run/range-unit.scala")
  @Test def `range`(): Unit = runTest("../files/run/range.scala")
  @Test def `rawstrings`(): Unit = runTest("../files/run/rawstrings.scala")
  @Test def `records`(): Unit = runTest("../files/run/records.scala")
  @Test def `reflect-priv-ctor`(): Unit = runTest("../files/run/reflect-priv-ctor.scala")
  @Test def `reflection-allmirrors-tostring`(): Unit = runTest("../files/run/reflection-allmirrors-tostring.scala")
  @Test def `reflection-companion`(): Unit = runTest("../files/run/reflection-companion.scala")
  @Test def `reflection-companiontype`(): Unit = runTest("../files/run/reflection-companiontype.scala")
  @Test def `reflection-constructormirror-inner-badpath`(): Unit = runTest("../files/run/reflection-constructormirror-inner-badpath.scala")
  @Test def `reflection-constructormirror-inner-good`(): Unit = runTest("../files/run/reflection-constructormirror-inner-good.scala")
  @Test def `reflection-constructormirror-nested-badpath`(): Unit = runTest("../files/run/reflection-constructormirror-nested-badpath.scala")
  @Test def `reflection-constructormirror-nested-good`(): Unit = runTest("../files/run/reflection-constructormirror-nested-good.scala")
  @Test def `reflection-constructormirror-toplevel-badpath`(): Unit = runTest("../files/run/reflection-constructormirror-toplevel-badpath.scala")
  @Test def `reflection-constructormirror-toplevel-good`(): Unit = runTest("../files/run/reflection-constructormirror-toplevel-good.scala")
  @Test def `reflection-enclosed-basic`(): Unit = runTest("../files/run/reflection-enclosed-basic.scala")
  @Test def `reflection-enclosed-inner-basic`(): Unit = runTest("../files/run/reflection-enclosed-inner-basic.scala")
  @Test def `reflection-enclosed-inner-inner-basic`(): Unit = runTest("../files/run/reflection-enclosed-inner-inner-basic.scala")
  @Test def `reflection-enclosed-inner-nested-basic`(): Unit = runTest("../files/run/reflection-enclosed-inner-nested-basic.scala")
  @Test def `reflection-enclosed-nested-basic`(): Unit = runTest("../files/run/reflection-enclosed-nested-basic.scala")
  @Test def `reflection-enclosed-nested-inner-basic`(): Unit = runTest("../files/run/reflection-enclosed-nested-inner-basic.scala")
  @Test def `reflection-enclosed-nested-nested-basic`(): Unit = runTest("../files/run/reflection-enclosed-nested-nested-basic.scala")
  @Test def `reflection-equality`(): Unit = runTest("../files/run/reflection-equality.scala")
  @Test def `reflection-fancy-java-classes`(): Unit = runTest("../files/run/reflection-fancy-java-classes")
  @Test def `reflection-fieldmirror-accessorsareokay`(): Unit = runTest("../files/run/reflection-fieldmirror-accessorsareokay.scala")
  @Test def `reflection-fieldmirror-ctorparam`(): Unit = runTest("../files/run/reflection-fieldmirror-ctorparam.scala")
  @Test def `reflection-fieldmirror-getsetval`(): Unit = runTest("../files/run/reflection-fieldmirror-getsetval.scala")
  @Test def `reflection-fieldmirror-getsetvar`(): Unit = runTest("../files/run/reflection-fieldmirror-getsetvar.scala")
  @Test def `reflection-fieldmirror-nmelocalsuffixstring`(): Unit = runTest("../files/run/reflection-fieldmirror-nmelocalsuffixstring.scala")
  @Test def `reflection-fieldmirror-privatethis`(): Unit = runTest("../files/run/reflection-fieldmirror-privatethis.scala")
  @Test def `reflection-fieldsymbol-navigation`(): Unit = runTest("../files/run/reflection-fieldsymbol-navigation.scala")
  @Test def `reflection-idtc`(): Unit = runTest("../files/run/reflection-idtc.scala")
  @Test def `reflection-implicit`(): Unit = runTest("../files/run/reflection-implicit.scala")
  @Test def `reflection-java-annotations`(): Unit = runTest("../files/run/reflection-java-annotations")
  @Test def `reflection-java-crtp`(): Unit = runTest("../files/run/reflection-java-crtp")
  @Test def `reflection-magicsymbols-invoke`(): Unit = runTest("../files/run/reflection-magicsymbols-invoke.scala")
  @Test def `reflection-magicsymbols-repl`(): Unit = runTest("../files/run/reflection-magicsymbols-repl.scala")
  @Test def `reflection-magicsymbols-vanilla`(): Unit = runTest("../files/run/reflection-magicsymbols-vanilla.scala")
  @Test def `reflection-mem-glbs`(): Unit = runTest("../files/run/reflection-mem-glbs.scala")
  @Test def `reflection-mem-tags`(): Unit = runTest("../files/run/reflection-mem-tags.scala")
  @Test def `reflection-mem-typecheck`(): Unit = runTest("../files/run/reflection-mem-typecheck.scala")
  @Test def `reflection-methodsymbol-params`(): Unit = runTest("../files/run/reflection-methodsymbol-params.scala")
  @Test def `reflection-methodsymbol-returntype`(): Unit = runTest("../files/run/reflection-methodsymbol-returntype.scala")
  @Test def `reflection-methodsymbol-typeparams`(): Unit = runTest("../files/run/reflection-methodsymbol-typeparams.scala")
  @Test def `reflection-modulemirror-inner-badpath`(): Unit = runTest("../files/run/reflection-modulemirror-inner-badpath.scala")
  @Test def `reflection-modulemirror-inner-good`(): Unit = runTest("../files/run/reflection-modulemirror-inner-good.scala")
  @Test def `reflection-modulemirror-nested-badpath`(): Unit = runTest("../files/run/reflection-modulemirror-nested-badpath.scala")
  @Test def `reflection-modulemirror-nested-good`(): Unit = runTest("../files/run/reflection-modulemirror-nested-good.scala")
  @Test def `reflection-modulemirror-toplevel-badpath`(): Unit = runTest("../files/run/reflection-modulemirror-toplevel-badpath.scala")
  @Test def `reflection-modulemirror-toplevel-good`(): Unit = runTest("../files/run/reflection-modulemirror-toplevel-good.scala")
  @Test def `reflection-names`(): Unit = runTest("../files/run/reflection-names.scala")
  @Test def `reflection-repl-classes`(): Unit = runTest("../files/run/reflection-repl-classes.scala")
  @Test def `reflection-repl-elementary`(): Unit = runTest("../files/run/reflection-repl-elementary.scala")
  @Test def `reflection-sanitychecks`(): Unit = runTest("../files/run/reflection-sanitychecks.scala")
  @Test def `reflection-scala-annotations`(): Unit = runTest("../files/run/reflection-scala-annotations.scala")
  @Test def `reflection-sorted-decls`(): Unit = runTest("../files/run/reflection-sorted-decls.scala")
  @Test def `reflection-sorted-members`(): Unit = runTest("../files/run/reflection-sorted-members.scala")
  @Test def `reflection-sync-potpourri`(): Unit = runTest("../files/run/reflection-sync-potpourri.scala")
  @Test def `reflection-sync-subtypes`(): Unit = runTest("../files/run/reflection-sync-subtypes.scala")
  @Test def `reflection-tags`(): Unit = runTest("../files/run/reflection-tags.scala")
  @Test def `reflection-valueclasses-derived`(): Unit = runTest("../files/run/reflection-valueclasses-derived.scala")
  @Test def `reflection-valueclasses-magic`(): Unit = runTest("../files/run/reflection-valueclasses-magic.scala")
  @Test def `reflection-valueclasses-standard`(): Unit = runTest("../files/run/reflection-valueclasses-standard.scala")
  @Test def `reflinit`(): Unit = runTest("../files/run/reflinit.scala")
  @Test def `reify-aliases`(): Unit = runTest("../files/run/reify-aliases.scala")
  @Test def `reify-each-node-type`(): Unit = runTest("../files/run/reify-each-node-type.scala")
  @Test def `reify-repl-fail-gracefully`(): Unit = runTest("../files/run/reify-repl-fail-gracefully.scala")
  @Test def `reify-staticXXX`(): Unit = runTest("../files/run/reify-staticXXX.scala")
  @Test def `reify_ann1a`(): Unit = runTest("../files/run/reify_ann1a.scala")
  @Test def `reify_ann1b`(): Unit = runTest("../files/run/reify_ann1b.scala")
  @Test def `reify_ann2a`(): Unit = runTest("../files/run/reify_ann2a.scala")
  @Test def `reify_ann3`(): Unit = runTest("../files/run/reify_ann3.scala")
  @Test def `reify_ann4`(): Unit = runTest("../files/run/reify_ann4.scala")
  @Test def `reify_ann5`(): Unit = runTest("../files/run/reify_ann5.scala")
  @Test def `reify_anonymous`(): Unit = runTest("../files/run/reify_anonymous.scala")
  @Test def `reify_classfileann_a`(): Unit = runTest("../files/run/reify_classfileann_a.scala")
  @Test def `reify_classfileann_b`(): Unit = runTest("../files/run/reify_classfileann_b.scala")
  @Test def `reify_closure1`(): Unit = runTest("../files/run/reify_closure1.scala")
  @Test def `reify_closure2a`(): Unit = runTest("../files/run/reify_closure2a.scala")
  @Test def `reify_closure3a`(): Unit = runTest("../files/run/reify_closure3a.scala")
  @Test def `reify_closure4a`(): Unit = runTest("../files/run/reify_closure4a.scala")
  @Test def `reify_closure5a`(): Unit = runTest("../files/run/reify_closure5a.scala")
  @Test def `reify_closure6`(): Unit = runTest("../files/run/reify_closure6.scala")
  @Test def `reify_closure7`(): Unit = runTest("../files/run/reify_closure7.scala")
  @Test def `reify_closure8a`(): Unit = runTest("../files/run/reify_closure8a.scala")
  @Test def `reify_closure8b`(): Unit = runTest("../files/run/reify_closure8b.scala")
  @Test def `reify_closures10`(): Unit = runTest("../files/run/reify_closures10.scala")
  @Test def `reify_complex`(): Unit = runTest("../files/run/reify_complex.scala")
  @Test def `reify_copypaste1`(): Unit = runTest("../files/run/reify_copypaste1.scala")
  @Test def `reify_copypaste2`(): Unit = runTest("../files/run/reify_copypaste2.scala")
  @Test def `reify_csv`(): Unit = runTest("../files/run/reify_csv.scala")
  @Test def `reify_extendbuiltins`(): Unit = runTest("../files/run/reify_extendbuiltins.scala")
  @Test def `reify_for1`(): Unit = runTest("../files/run/reify_for1.scala")
  @Test def `reify_fors_newpatmat`(): Unit = runTest("../files/run/reify_fors_newpatmat.scala")
  @Test def `reify_fors_oldpatmat`(): Unit = runTest("../files/run/reify_fors_oldpatmat.scala")
  @Test def `reify_generic`(): Unit = runTest("../files/run/reify_generic.scala")
  @Test def `reify_generic2`(): Unit = runTest("../files/run/reify_generic2.scala")
  @Test def `reify_getter`(): Unit = runTest("../files/run/reify_getter.scala")
  @Test def `reify_implicits-new`(): Unit = runTest("../files/run/reify_implicits-new.scala")
  @Test def `reify_implicits-old`(): Unit = runTest("../files/run/reify_implicits-old.scala")
  @Test def `reify_inheritance`(): Unit = runTest("../files/run/reify_inheritance.scala")
  @Test def `reify_inner1`(): Unit = runTest("../files/run/reify_inner1.scala")
  @Test def `reify_inner2`(): Unit = runTest("../files/run/reify_inner2.scala")
  @Test def `reify_inner3`(): Unit = runTest("../files/run/reify_inner3.scala")
  @Test def `reify_inner4`(): Unit = runTest("../files/run/reify_inner4.scala")
  @Test def `reify_lazyevaluation`(): Unit = runTest("../files/run/reify_lazyevaluation.scala")
  @Test def `reify_lazyunit`(): Unit = runTest("../files/run/reify_lazyunit.scala")
  @Test def `reify_magicsymbols`(): Unit = runTest("../files/run/reify_magicsymbols.scala")
  @Test def `reify_maps_newpatmat`(): Unit = runTest("../files/run/reify_maps_newpatmat.scala")
  @Test def `reify_maps_oldpatmat`(): Unit = runTest("../files/run/reify_maps_oldpatmat.scala")
  @Test def `reify_metalevel_breach_+0_refers_to_1`(): Unit = runTest("../files/run/reify_metalevel_breach_+0_refers_to_1.scala")
  @Test def `reify_metalevel_breach_-1_refers_to_0_a`(): Unit = runTest("../files/run/reify_metalevel_breach_-1_refers_to_0_a.scala")
  @Test def `reify_metalevel_breach_-1_refers_to_0_b`(): Unit = runTest("../files/run/reify_metalevel_breach_-1_refers_to_0_b.scala")
  @Test def `reify_metalevel_breach_-1_refers_to_1`(): Unit = runTest("../files/run/reify_metalevel_breach_-1_refers_to_1.scala")
  @Test def `reify_nested_inner_refers_to_global`(): Unit = runTest("../files/run/reify_nested_inner_refers_to_global.scala")
  @Test def `reify_nested_inner_refers_to_local`(): Unit = runTest("../files/run/reify_nested_inner_refers_to_local.scala")
  @Test def `reify_nested_outer_refers_to_global`(): Unit = runTest("../files/run/reify_nested_outer_refers_to_global.scala")
  @Test def `reify_nested_outer_refers_to_local`(): Unit = runTest("../files/run/reify_nested_outer_refers_to_local.scala")
  @Test def `reify_newimpl_01`(): Unit = runTest("../files/run/reify_newimpl_01.scala")
  @Test def `reify_newimpl_02`(): Unit = runTest("../files/run/reify_newimpl_02.scala")
  @Test def `reify_newimpl_03`(): Unit = runTest("../files/run/reify_newimpl_03.scala")
  @Test def `reify_newimpl_04`(): Unit = runTest("../files/run/reify_newimpl_04.scala")
  @Test def `reify_newimpl_05`(): Unit = runTest("../files/run/reify_newimpl_05.scala")
  @Test def `reify_newimpl_06`(): Unit = runTest("../files/run/reify_newimpl_06.scala")
  @Test def `reify_newimpl_11`(): Unit = runTest("../files/run/reify_newimpl_11.scala")
  @Test def `reify_newimpl_12`(): Unit = runTest("../files/run/reify_newimpl_12.scala")
  @Test def `reify_newimpl_13`(): Unit = runTest("../files/run/reify_newimpl_13.scala")
  @Test def `reify_newimpl_14`(): Unit = runTest("../files/run/reify_newimpl_14.scala")
  @Test def `reify_newimpl_15`(): Unit = runTest("../files/run/reify_newimpl_15.scala")
  @Test def `reify_newimpl_18`(): Unit = runTest("../files/run/reify_newimpl_18.scala")
  @Test def `reify_newimpl_19`(): Unit = runTest("../files/run/reify_newimpl_19.scala")
  @Test def `reify_newimpl_20`(): Unit = runTest("../files/run/reify_newimpl_20.scala")
  @Test def `reify_newimpl_21`(): Unit = runTest("../files/run/reify_newimpl_21.scala")
  @Test def `reify_newimpl_22`(): Unit = runTest("../files/run/reify_newimpl_22.scala")
  @Test def `reify_newimpl_23`(): Unit = runTest("../files/run/reify_newimpl_23.scala")
  @Test def `reify_newimpl_25`(): Unit = runTest("../files/run/reify_newimpl_25.scala")
  @Test def `reify_newimpl_26`(): Unit = runTest("../files/run/reify_newimpl_26.scala")
  @Test def `reify_newimpl_27`(): Unit = runTest("../files/run/reify_newimpl_27.scala")
  @Test def `reify_newimpl_29`(): Unit = runTest("../files/run/reify_newimpl_29.scala")
  @Test def `reify_newimpl_30`(): Unit = runTest("../files/run/reify_newimpl_30.scala")
  @Test def `reify_newimpl_31`(): Unit = runTest("../files/run/reify_newimpl_31.scala")
  @Test def `reify_newimpl_33`(): Unit = runTest("../files/run/reify_newimpl_33.scala")
  @Test def `reify_newimpl_35`(): Unit = runTest("../files/run/reify_newimpl_35.scala")
  @Test def `reify_newimpl_36`(): Unit = runTest("../files/run/reify_newimpl_36.scala")
  @Test def `reify_newimpl_37`(): Unit = runTest("../files/run/reify_newimpl_37.scala")
  @Test def `reify_newimpl_38`(): Unit = runTest("../files/run/reify_newimpl_38.scala")
  @Test def `reify_newimpl_39`(): Unit = runTest("../files/run/reify_newimpl_39.scala")
  @Test def `reify_newimpl_40`(): Unit = runTest("../files/run/reify_newimpl_40.scala")
  @Test def `reify_newimpl_41`(): Unit = runTest("../files/run/reify_newimpl_41.scala")
  @Test def `reify_newimpl_42`(): Unit = runTest("../files/run/reify_newimpl_42.scala")
  @Test def `reify_newimpl_43`(): Unit = runTest("../files/run/reify_newimpl_43.scala")
  @Test def `reify_newimpl_44`(): Unit = runTest("../files/run/reify_newimpl_44.scala")
  @Test def `reify_newimpl_45-run.obj`(): Unit = runTest("../files/run/reify_newimpl_45-run.obj")
  @Test def `reify_newimpl_45`(): Unit = runTest("../files/run/reify_newimpl_45.scala")
  @Test def `reify_newimpl_47-run.obj`(): Unit = runTest("../files/run/reify_newimpl_47-run.obj")
  @Test def `reify_newimpl_47`(): Unit = runTest("../files/run/reify_newimpl_47.scala")
  @Test def `reify_newimpl_48-run.obj`(): Unit = runTest("../files/run/reify_newimpl_48-run.obj")
  @Test def `reify_newimpl_48`(): Unit = runTest("../files/run/reify_newimpl_48.scala")
  @Test def `reify_newimpl_49-run.obj`(): Unit = runTest("../files/run/reify_newimpl_49-run.obj")
  @Test def `reify_newimpl_49`(): Unit = runTest("../files/run/reify_newimpl_49.scala")
  @Test def `reify_newimpl_50-run.obj`(): Unit = runTest("../files/run/reify_newimpl_50-run.obj")
  @Test def `reify_newimpl_50`(): Unit = runTest("../files/run/reify_newimpl_50.scala")
  @Test def `reify_newimpl_51-run.obj`(): Unit = runTest("../files/run/reify_newimpl_51-run.obj")
  @Test def `reify_newimpl_51`(): Unit = runTest("../files/run/reify_newimpl_51.scala")
  @Test def `reify_newimpl_52-run.obj`(): Unit = runTest("../files/run/reify_newimpl_52-run.obj")
  @Test def `reify_newimpl_52`(): Unit = runTest("../files/run/reify_newimpl_52.scala")
  @Test def `reify_printf-run.obj`(): Unit = runTest("../files/run/reify_printf-run.obj")
  @Test def `reify_printf`(): Unit = runTest("../files/run/reify_printf.scala")
  @Test def `reify_properties`(): Unit = runTest("../files/run/reify_properties.scala")
  @Test def `reify_renamed_term_basic`(): Unit = runTest("../files/run/reify_renamed_term_basic.scala")
  @Test def `reify_renamed_term_local_to_reifee`(): Unit = runTest("../files/run/reify_renamed_term_local_to_reifee.scala")
  @Test def `reify_renamed_term_overloaded_method`(): Unit = runTest("../files/run/reify_renamed_term_overloaded_method.scala")
  @Test def `reify_renamed_term_t5841`(): Unit = runTest("../files/run/reify_renamed_term_t5841.scala")
  @Test def `reify_renamed_type_basic`(): Unit = runTest("../files/run/reify_renamed_type_basic.scala")
  @Test def `reify_renamed_type_local_to_reifee`(): Unit = runTest("../files/run/reify_renamed_type_local_to_reifee.scala")
  @Test def `reify_renamed_type_spliceable`(): Unit = runTest("../files/run/reify_renamed_type_spliceable.scala")
  @Test def `reify_sort`(): Unit = runTest("../files/run/reify_sort.scala")
  @Test def `reify_sort1`(): Unit = runTest("../files/run/reify_sort1.scala")
  @Test def `reify_this`(): Unit = runTest("../files/run/reify_this.scala")
  @Test def `reify_timeofday`(): Unit = runTest("../files/run/reify_timeofday.scala")
  @Test def `reify_typerefs_1a`(): Unit = runTest("../files/run/reify_typerefs_1a.scala")
  @Test def `reify_typerefs_1b`(): Unit = runTest("../files/run/reify_typerefs_1b.scala")
  @Test def `reify_typerefs_2a`(): Unit = runTest("../files/run/reify_typerefs_2a.scala")
  @Test def `reify_typerefs_2b`(): Unit = runTest("../files/run/reify_typerefs_2b.scala")
  @Test def `reify_typerefs_3a`(): Unit = runTest("../files/run/reify_typerefs_3a.scala")
  @Test def `reify_typerefs_3b`(): Unit = runTest("../files/run/reify_typerefs_3b.scala")
  @Test def `reify_varargs`(): Unit = runTest("../files/run/reify_varargs.scala")
  @Test def `repl-assign`(): Unit = runTest("../files/run/repl-assign.scala")
  @Test def `repl-backticks`(): Unit = runTest("../files/run/repl-backticks.scala")
  @Test def `repl-bare-expr`(): Unit = runTest("../files/run/repl-bare-expr.scala")
  @Test def `repl-classbased`(): Unit = runTest("../files/run/repl-classbased.scala")
  @Test def `repl-colon-type`(): Unit = runTest("../files/run/repl-colon-type.scala")
  @Test def `repl-empty-package`(): Unit = runTest("../files/run/repl-empty-package")
  @Test def `repl-implicits-nopredef`(): Unit = runTest("../files/run/repl-implicits-nopredef.scala")
  @Test def `repl-implicits`(): Unit = runTest("../files/run/repl-implicits.scala")
  @Test def `repl-javap-def`(): Unit = runTest("../files/run/repl-javap-def.scala")
  @Test def `repl-javap-mem`(): Unit = runTest("../files/run/repl-javap-mem.scala")
  @Test def `repl-javap-outdir`(): Unit = runTest("../files/run/repl-javap-outdir")
  @Test def `repl-javap`(): Unit = runTest("../files/run/repl-javap.scala")
  @Test def `repl-no-uescape`(): Unit = runTest("../files/run/repl-no-uescape.scala")
  @Test def `repl-out-dir`(): Unit = runTest("../files/run/repl-out-dir.scala")
  @Test def `repl-parens`(): Unit = runTest("../files/run/repl-parens.scala")
  @Test def `repl-paste-2`(): Unit = runTest("../files/run/repl-paste-2.scala")
  @Test def `repl-paste-3`(): Unit = runTest("../files/run/repl-paste-3.scala")
  @Test def `repl-paste-4`(): Unit = runTest("../files/run/repl-paste-4.scala")
  @Test def `repl-paste-5`(): Unit = runTest("../files/run/repl-paste-5.scala")
  @Test def `repl-paste-6`(): Unit = runTest("../files/run/repl-paste-6.scala")
  @Test def `repl-paste-raw`(): Unit = runTest("../files/run/repl-paste-raw.scala")
  @Test def `repl-paste`(): Unit = runTest("../files/run/repl-paste.scala")
  @Test def `repl-power`(): Unit = runTest("../files/run/repl-power.scala")
  @Test def `repl-reset`(): Unit = runTest("../files/run/repl-reset.scala")
  @Test def `repl-save`(): Unit = runTest("../files/run/repl-save.scala")
  @Test def `repl-serialization`(): Unit = runTest("../files/run/repl-serialization.scala")
  @Test def `repl-term-macros`(): Unit = runTest("../files/run/repl-term-macros.scala")
  @Test def `repl-transcript`(): Unit = runTest("../files/run/repl-transcript.scala")
  @Test def `repl-trim-stack-trace`(): Unit = runTest("../files/run/repl-trim-stack-trace.scala")
  @Test def `repl-type-verbose`(): Unit = runTest("../files/run/repl-type-verbose.scala")
  @Test def `ReplacementMatching`(): Unit = runTest("../files/run/ReplacementMatching.scala")
  @Test def `resetattrs-this`(): Unit = runTest("../files/run/resetattrs-this.scala")
  @Test def `retclosure`(): Unit = runTest("../files/run/retclosure.scala")
  @Test def `retsynch`(): Unit = runTest("../files/run/retsynch.scala")
  @Test def `ReverseSeqView`(): Unit = runTest("../files/run/ReverseSeqView.scala")
  @Test def `richs`(): Unit = runTest("../files/run/richs.scala")
  @Test def `richWrapperEquals`(): Unit = runTest("../files/run/richWrapperEquals.scala")
  @Test def `run-bug4840`(): Unit = runTest("../files/run/run-bug4840.scala")
  @Test def `runtime-richChar`(): Unit = runTest("../files/run/runtime-richChar.scala")
  @Test def `runtime`(): Unit = runTest("../files/run/runtime.scala")
  @Test def `runtimeEval1`(): Unit = runTest("../files/run/runtimeEval1.scala")
  @Test def `runtimeEval2`(): Unit = runTest("../files/run/runtimeEval2.scala")
  @Test def `sammy_after_implicit_view`(): Unit = runTest("../files/run/sammy_after_implicit_view.scala")
  @Test def `sammy_cbn`(): Unit = runTest("../files/run/sammy_cbn.scala")
  @Test def `sammy_erasure_cce`(): Unit = runTest("../files/run/sammy_erasure_cce.scala")
  @Test def `sammy_java8`(): Unit = runTest("../files/run/sammy_java8.scala")
  @Test def `sammy_restrictions_LMF`(): Unit = runTest("../files/run/sammy_restrictions_LMF.scala")
  @Test def `sammy_return`(): Unit = runTest("../files/run/sammy_return.scala")
  @Test def `sammy_vararg_cbn`(): Unit = runTest("../files/run/sammy_vararg_cbn.scala")
  @Test def `sbt-icode-interface`(): Unit = runTest("../files/run/sbt-icode-interface.scala")
  @Test def `scalapInvokedynamic`(): Unit = runTest("../files/run/scalapInvokedynamic.scala")
  @Test def `scan`(): Unit = runTest("../files/run/scan.scala")
  @Test def `search`(): Unit = runTest("../files/run/search.scala")
  @Test def `seqlike-kmp`(): Unit = runTest("../files/run/seqlike-kmp.scala")
  @Test def `sequenceComparisons`(): Unit = runTest("../files/run/sequenceComparisons.scala")
  @Test def `serialize-stream`(): Unit = runTest("../files/run/serialize-stream.scala")
  @Test def `settings-parse`(): Unit = runTest("../files/run/settings-parse.scala")
  @Test def `shortClass`(): Unit = runTest("../files/run/shortClass.scala")
  @Test def `showdecl`(): Unit = runTest("../files/run/showdecl")
  @Test def `showraw_aliases`(): Unit = runTest("../files/run/showraw_aliases.scala")
  @Test def `showraw_mods`(): Unit = runTest("../files/run/showraw_mods.scala")
  @Test def `showraw_nosymbol`(): Unit = runTest("../files/run/showraw_nosymbol.scala")
  @Test def `showraw_tree`(): Unit = runTest("../files/run/showraw_tree.scala")
  @Test def `showraw_tree_ids`(): Unit = runTest("../files/run/showraw_tree_ids.scala")
  @Test def `showraw_tree_kinds`(): Unit = runTest("../files/run/showraw_tree_kinds.scala")
  @Test def `showraw_tree_types_ids`(): Unit = runTest("../files/run/showraw_tree_types_ids.scala")
  @Test def `showraw_tree_types_typed`(): Unit = runTest("../files/run/showraw_tree_types_typed.scala")
  @Test def `showraw_tree_types_untyped`(): Unit = runTest("../files/run/showraw_tree_types_untyped.scala")
  @Test def `showraw_tree_ultimate`(): Unit = runTest("../files/run/showraw_tree_ultimate.scala")
  @Test def `shutdownhooks`(): Unit = runTest("../files/run/shutdownhooks.scala")
  @Test def `slice-strings`(): Unit = runTest("../files/run/slice-strings.scala")
  @Test def `slices`(): Unit = runTest("../files/run/slices.scala")
  @Test def `sm-interpolator`(): Unit = runTest("../files/run/sm-interpolator.scala")
  @Test def `sort`(): Unit = runTest("../files/run/sort.scala")
  @Test def `spec-nlreturn`(): Unit = runTest("../files/run/spec-nlreturn.scala")
  @Test def `spec-self`(): Unit = runTest("../files/run/spec-self.scala")
  @Test def `static-module-method`(): Unit = runTest("../files/run/static-module-method.scala")
  @Test def `stream-stack-overflow-filter-map`(): Unit = runTest("../files/run/stream-stack-overflow-filter-map.scala")
  @Test def `stream_flatmap_odds`(): Unit = runTest("../files/run/stream_flatmap_odds.scala")
  @Test def `stream_length`(): Unit = runTest("../files/run/stream_length.scala")
  @Test def `streams`(): Unit = runTest("../files/run/streams.scala")
  @Test def `streamWithFilter`(): Unit = runTest("../files/run/streamWithFilter.scala")
  @Test def `string-extractor`(): Unit = runTest("../files/run/string-extractor.scala")
  @Test def `stringbuilder-drop`(): Unit = runTest("../files/run/stringbuilder-drop.scala")
  @Test def `stringbuilder`(): Unit = runTest("../files/run/stringbuilder.scala")
  @Test def `structural`(): Unit = runTest("../files/run/structural.scala")
  @Test def `SymbolsTest`(): Unit = runTest("../files/run/SymbolsTest.scala")
  @Test def `synchronized`(): Unit = runTest("../files/run/synchronized.scala")
  @Test def `sysprops`(): Unit = runTest("../files/run/sysprops.scala")
  @Test def `t0005`(): Unit = runTest("../files/run/t0005.scala")
  @Test def `t0017`(): Unit = runTest("../files/run/t0017.scala")
  @Test def `t0042`(): Unit = runTest("../files/run/t0042.scala")
  @Test def `t0048`(): Unit = runTest("../files/run/t0048.scala")
  @Test def `t0091`(): Unit = runTest("../files/run/t0091.scala")
  @Test def `t0325`(): Unit = runTest("../files/run/t0325.scala")
  @Test def `t0412`(): Unit = runTest("../files/run/t0412.scala")
  @Test def `t0421-new`(): Unit = runTest("../files/run/t0421-new.scala")
  @Test def `t0421-old`(): Unit = runTest("../files/run/t0421-old.scala")
  @Test def `t0432`(): Unit = runTest("../files/run/t0432.scala")
  @Test def `t0508`(): Unit = runTest("../files/run/t0508.scala")
  @Test def `t0528`(): Unit = runTest("../files/run/t0528.scala")
  @Test def `t0607`(): Unit = runTest("../files/run/t0607.scala")
  @Test def `t0631`(): Unit = runTest("../files/run/t0631.scala")
  @Test def `t0668`(): Unit = runTest("../files/run/t0668.scala")
  @Test def `t0677-new`(): Unit = runTest("../files/run/t0677-new.scala")
  @Test def `t0677-old`(): Unit = runTest("../files/run/t0677-old.scala")
  @Test def `t0807`(): Unit = runTest("../files/run/t0807.scala")
  @Test def `t0883`(): Unit = runTest("../files/run/t0883.scala")
  @Test def `t0911`(): Unit = runTest("../files/run/t0911.scala")
  @Test def `t0936`(): Unit = runTest("../files/run/t0936.scala")
  @Test def `t1005`(): Unit = runTest("../files/run/t1005.scala")
  @Test def `t102`(): Unit = runTest("../files/run/t102.scala")
  @Test def `t1042`(): Unit = runTest("../files/run/t1042.scala")
  @Test def `t1044`(): Unit = runTest("../files/run/t1044.scala")
  @Test def `t1048`(): Unit = runTest("../files/run/t1048.scala")
  @Test def `t107`(): Unit = runTest("../files/run/t107.scala")
  @Test def `t1074`(): Unit = runTest("../files/run/t1074.scala")
  @Test def `t1110`(): Unit = runTest("../files/run/t1110.scala")
  @Test def `t1141`(): Unit = runTest("../files/run/t1141.scala")
  @Test def `t1167`(): Unit = runTest("../files/run/t1167.scala")
  @Test def `t1192`(): Unit = runTest("../files/run/t1192.scala")
  @Test def `t1195-new`(): Unit = runTest("../files/run/t1195-new.scala")
  @Test def `t1195-old`(): Unit = runTest("../files/run/t1195-old.scala")
  @Test def `t1220`(): Unit = runTest("../files/run/t1220.scala")
  @Test def `t1247`(): Unit = runTest("../files/run/t1247.scala")
  @Test def `t1300`(): Unit = runTest("../files/run/t1300.scala")
  @Test def `t1309`(): Unit = runTest("../files/run/t1309.scala")
  @Test def `t1323`(): Unit = runTest("../files/run/t1323.scala")
  @Test def `t1333`(): Unit = runTest("../files/run/t1333.scala")
  @Test def `t1360`(): Unit = runTest("../files/run/t1360.scala")
  @Test def `t1368`(): Unit = runTest("../files/run/t1368.scala")
  @Test def `t1373`(): Unit = runTest("../files/run/t1373.scala")
  @Test def `t1423`(): Unit = runTest("../files/run/t1423.scala")
  @Test def `t1427`(): Unit = runTest("../files/run/t1427.scala")
  @Test def `t1430`(): Unit = runTest("../files/run/t1430")
  @Test def `t1434`(): Unit = runTest("../files/run/t1434.scala")
  @Test def `t1466`(): Unit = runTest("../files/run/t1466.scala")
  @Test def `t1500`(): Unit = runTest("../files/run/t1500.scala")
  @Test def `t1501`(): Unit = runTest("../files/run/t1501.scala")
  @Test def `t1503`(): Unit = runTest("../files/run/t1503.scala")
  @Test def `t1503_future`(): Unit = runTest("../files/run/t1503_future.scala")
  @Test def `t1505`(): Unit = runTest("../files/run/t1505.scala")
  @Test def `t1524`(): Unit = runTest("../files/run/t1524.scala")
  @Test def `t153`(): Unit = runTest("../files/run/t153.scala")
  @Test def `t1535`(): Unit = runTest("../files/run/t1535.scala")
  @Test def `t1537`(): Unit = runTest("../files/run/t1537.scala")
  @Test def `t1591`(): Unit = runTest("../files/run/t1591.scala")
  @Test def `t1618`(): Unit = runTest("../files/run/t1618.scala")
  @Test def `t1672`(): Unit = runTest("../files/run/t1672.scala")
  @Test def `t1697`(): Unit = runTest("../files/run/t1697.scala")
  @Test def `t1718`(): Unit = runTest("../files/run/t1718.scala")
  @Test def `t1747`(): Unit = runTest("../files/run/t1747.scala")
  @Test def `t1766`(): Unit = runTest("../files/run/t1766.scala")
  @Test def `t1829`(): Unit = runTest("../files/run/t1829.scala")
  @Test def `t1909`(): Unit = runTest("../files/run/t1909.scala")
  @Test def `t1909b`(): Unit = runTest("../files/run/t1909b.scala")
  @Test def `t1909c`(): Unit = runTest("../files/run/t1909c.scala")
  @Test def `t1931`(): Unit = runTest("../files/run/t1931.scala")
  @Test def `t1939`(): Unit = runTest("../files/run/t1939.scala")
  @Test def `t1987`(): Unit = runTest("../files/run/t1987.scala")
  @Test def `t1987b`(): Unit = runTest("../files/run/t1987b")
  @Test def `t1994`(): Unit = runTest("../files/run/t1994.scala")
  @Test def `t2005`(): Unit = runTest("../files/run/t2005.scala")
  @Test def `t2027`(): Unit = runTest("../files/run/t2027.scala")
  @Test def `t2029`(): Unit = runTest("../files/run/t2029.scala")
  @Test def `t2030`(): Unit = runTest("../files/run/t2030.scala")
  @Test def `t2074_2`(): Unit = runTest("../files/run/t2074_2.scala")
  @Test def `t2075`(): Unit = runTest("../files/run/t2075.scala")
  @Test def `t2087-and-2400`(): Unit = runTest("../files/run/t2087-and-2400.scala")
  @Test def `t2106`(): Unit = runTest("../files/run/t2106.scala")
  @Test def `t2111`(): Unit = runTest("../files/run/t2111.scala")
  @Test def `t2127`(): Unit = runTest("../files/run/t2127.scala")
  @Test def `t2147`(): Unit = runTest("../files/run/t2147.scala")
  @Test def `t216`(): Unit = runTest("../files/run/t216.scala")
  @Test def `t2162`(): Unit = runTest("../files/run/t2162.scala")
  @Test def `t2175`(): Unit = runTest("../files/run/t2175.scala")
  @Test def `t2176`(): Unit = runTest("../files/run/t2176.scala")
  @Test def `t2177`(): Unit = runTest("../files/run/t2177.scala")
  @Test def `t2212`(): Unit = runTest("../files/run/t2212.scala")
  @Test def `t2236-new`(): Unit = runTest("../files/run/t2236-new.scala")
  @Test def `t2236-old`(): Unit = runTest("../files/run/t2236-old.scala")
  @Test def `t2241`(): Unit = runTest("../files/run/t2241.scala")
  @Test def `t2250`(): Unit = runTest("../files/run/t2250.scala")
  @Test def `t2251`(): Unit = runTest("../files/run/t2251.scala")
  @Test def `t2251b`(): Unit = runTest("../files/run/t2251b.scala")
  @Test def `t2255`(): Unit = runTest("../files/run/t2255.scala")
  @Test def `t2296c`(): Unit = runTest("../files/run/t2296c")
  @Test def `t2308a`(): Unit = runTest("../files/run/t2308a.scala")
  @Test def `t2316_run`(): Unit = runTest("../files/run/t2316_run.scala")
  @Test def `t2318`(): Unit = runTest("../files/run/t2318.scala")
  @Test def `t2333`(): Unit = runTest("../files/run/t2333.scala")
  @Test def `t2337`(): Unit = runTest("../files/run/t2337.scala")
  @Test def `t2378`(): Unit = runTest("../files/run/t2378.scala")
  @Test def `t2386-new`(): Unit = runTest("../files/run/t2386-new.scala")
  @Test def `t2417`(): Unit = runTest("../files/run/t2417.scala")
  @Test def `t2418`(): Unit = runTest("../files/run/t2418.scala")
  @Test def `t2446`(): Unit = runTest("../files/run/t2446.scala")
  @Test def `t2464`(): Unit = runTest("../files/run/t2464")
  @Test def `t2488`(): Unit = runTest("../files/run/t2488.scala")
  @Test def `t2503`(): Unit = runTest("../files/run/t2503.scala")
  @Test def `t2512`(): Unit = runTest("../files/run/t2512.scala")
  @Test def `t2514`(): Unit = runTest("../files/run/t2514.scala")
  @Test def `t2524`(): Unit = runTest("../files/run/t2524.scala")
  @Test def `t2526`(): Unit = runTest("../files/run/t2526.scala")
  @Test def `t2544`(): Unit = runTest("../files/run/t2544.scala")
  @Test def `t2552`(): Unit = runTest("../files/run/t2552.scala")
  @Test def `t2577`(): Unit = runTest("../files/run/t2577.scala")
  @Test def `t2594_tcpoly`(): Unit = runTest("../files/run/t2594_tcpoly.scala")
  @Test def `t261`(): Unit = runTest("../files/run/t261.scala")
  @Test def `t2636`(): Unit = runTest("../files/run/t2636.scala")
  @Test def `t266`(): Unit = runTest("../files/run/t266.scala")
  @Test def `t2754`(): Unit = runTest("../files/run/t2754.scala")
  @Test def `t2755`(): Unit = runTest("../files/run/t2755.scala")
  @Test def `t2788`(): Unit = runTest("../files/run/t2788.scala")
  @Test def `t2800`(): Unit = runTest("../files/run/t2800.scala")
  @Test def `t2813.2`(): Unit = runTest("../files/run/t2813.2.scala")
  @Test def `t2818`(): Unit = runTest("../files/run/t2818.scala")
  @Test def `t2849`(): Unit = runTest("../files/run/t2849.scala")
  @Test def `t2857`(): Unit = runTest("../files/run/t2857.scala")
  @Test def `t2866`(): Unit = runTest("../files/run/t2866.scala")
  @Test def `t2867`(): Unit = runTest("../files/run/t2867.scala")
  @Test def `t2873`(): Unit = runTest("../files/run/t2873.scala")
  @Test def `t2876`(): Unit = runTest("../files/run/t2876.scala")
  @Test def `t2886`(): Unit = runTest("../files/run/t2886.scala")
  @Test def `t2958`(): Unit = runTest("../files/run/t2958.scala")
  @Test def `t298`(): Unit = runTest("../files/run/t298.scala")
  @Test def `t3004`(): Unit = runTest("../files/run/t3004.scala")
  @Test def `t3026`(): Unit = runTest("../files/run/t3026.scala")
  @Test def `t3038`(): Unit = runTest("../files/run/t3038.scala")
  @Test def `t3038b`(): Unit = runTest("../files/run/t3038b.scala")
  @Test def `t3038c`(): Unit = runTest("../files/run/t3038c")
  @Test def `t3038d`(): Unit = runTest("../files/run/t3038d.scala")
  @Test def `t3050`(): Unit = runTest("../files/run/t3050.scala")
  @Test def `t3088`(): Unit = runTest("../files/run/t3088.scala")
  @Test def `t3097`(): Unit = runTest("../files/run/t3097.scala")
  @Test def `t3112`(): Unit = runTest("../files/run/t3112.scala")
  @Test def `t3126`(): Unit = runTest("../files/run/t3126.scala")
  @Test def `t3150`(): Unit = runTest("../files/run/t3150.scala")
  @Test def `t3158`(): Unit = runTest("../files/run/t3158.scala")
  @Test def `t3175`(): Unit = runTest("../files/run/t3175.scala")
  @Test def `t3186`(): Unit = runTest("../files/run/t3186.scala")
  @Test def `t3199b`(): Unit = runTest("../files/run/t3199b.scala")
  @Test def `t3232`(): Unit = runTest("../files/run/t3232.scala")
  @Test def `t3235-minimal`(): Unit = runTest("../files/run/t3235-minimal.scala")
  @Test def `t3241`(): Unit = runTest("../files/run/t3241.scala")
  @Test def `t3242`(): Unit = runTest("../files/run/t3242.scala")
  @Test def `t3242b`(): Unit = runTest("../files/run/t3242b.scala")
  @Test def `t3269`(): Unit = runTest("../files/run/t3269.scala")
  @Test def `t3273`(): Unit = runTest("../files/run/t3273.scala")
  @Test def `t3326`(): Unit = runTest("../files/run/t3326.scala")
  @Test def `t3327`(): Unit = runTest("../files/run/t3327.scala")
  @Test def `t3346a`(): Unit = runTest("../files/run/t3346a.scala")
  @Test def `t3346d`(): Unit = runTest("../files/run/t3346d.scala")
  @Test def `t3346e`(): Unit = runTest("../files/run/t3346e.scala")
  @Test def `t3346f`(): Unit = runTest("../files/run/t3346f.scala")
  @Test def `t3346g`(): Unit = runTest("../files/run/t3346g.scala")
  @Test def `t3346h`(): Unit = runTest("../files/run/t3346h.scala")
  @Test def `t3346j`(): Unit = runTest("../files/run/t3346j.scala")
  @Test def `t3353`(): Unit = runTest("../files/run/t3353.scala")
  @Test def `t3361`(): Unit = runTest("../files/run/t3361.scala")
  @Test def `t3368-b`(): Unit = runTest("../files/run/t3368-b.scala")
  @Test def `t3368-c`(): Unit = runTest("../files/run/t3368-c.scala")
  @Test def `t3368-d`(): Unit = runTest("../files/run/t3368-d.scala")
  @Test def `t3368`(): Unit = runTest("../files/run/t3368.scala")
  @Test def `t3376`(): Unit = runTest("../files/run/t3376.scala")
  @Test def `t3395`(): Unit = runTest("../files/run/t3395.scala")
  @Test def `t3397`(): Unit = runTest("../files/run/t3397.scala")
  @Test def `t3425`(): Unit = runTest("../files/run/t3425.scala")
  @Test def `t3425b`(): Unit = runTest("../files/run/t3425b")
  @Test def `t3452`(): Unit = runTest("../files/run/t3452.scala")
  @Test def `t3452a`(): Unit = runTest("../files/run/t3452a")
  @Test def `t3452b`(): Unit = runTest("../files/run/t3452b")
  @Test def `t3452c`(): Unit = runTest("../files/run/t3452c.scala")
  @Test def `t3452d`(): Unit = runTest("../files/run/t3452d")
  @Test def `t3452e`(): Unit = runTest("../files/run/t3452e")
  @Test def `t3452f`(): Unit = runTest("../files/run/t3452f.scala")
  @Test def `t3452g`(): Unit = runTest("../files/run/t3452g")
  @Test def `t3452h`(): Unit = runTest("../files/run/t3452h.scala")
  @Test def `t3487`(): Unit = runTest("../files/run/t3487.scala")
  @Test def `t3488`(): Unit = runTest("../files/run/t3488.scala")
  @Test def `t3493`(): Unit = runTest("../files/run/t3493.scala")
  @Test def `t3496`(): Unit = runTest("../files/run/t3496.scala")
  @Test def `t3502`(): Unit = runTest("../files/run/t3502.scala")
  @Test def `t3507-new`(): Unit = runTest("../files/run/t3507-new.scala")
  @Test def `t3508`(): Unit = runTest("../files/run/t3508.scala")
  @Test def `t3509`(): Unit = runTest("../files/run/t3509.scala")
  @Test def `t3511`(): Unit = runTest("../files/run/t3511.scala")
  @Test def `t3518`(): Unit = runTest("../files/run/t3518.scala")
  @Test def `t3529`(): Unit = runTest("../files/run/t3529.scala")
  @Test def `t3530`(): Unit = runTest("../files/run/t3530.scala")
  @Test def `t3540`(): Unit = runTest("../files/run/t3540.scala")
  @Test def `t3563`(): Unit = runTest("../files/run/t3563.scala")
  @Test def `t3569`(): Unit = runTest("../files/run/t3569.scala")
  @Test def `t3575`(): Unit = runTest("../files/run/t3575.scala")
  @Test def `t3580`(): Unit = runTest("../files/run/t3580.scala")
  @Test def `t3603`(): Unit = runTest("../files/run/t3603.scala")
  @Test def `t3613`(): Unit = runTest("../files/run/t3613.scala")
  @Test def `t3616`(): Unit = runTest("../files/run/t3616.scala")
  @Test def `t3619`(): Unit = runTest("../files/run/t3619.scala")
  @Test def `t363`(): Unit = runTest("../files/run/t363.scala")
  @Test def `t3645`(): Unit = runTest("../files/run/t3645.scala")
  @Test def `t3647`(): Unit = runTest("../files/run/t3647.scala")
  @Test def `t3651`(): Unit = runTest("../files/run/t3651.scala")
  @Test def `t3667`(): Unit = runTest("../files/run/t3667.scala")
  @Test def `t3670`(): Unit = runTest("../files/run/t3670.scala")
  @Test def `t3687`(): Unit = runTest("../files/run/t3687.scala")
  @Test def `t3699`(): Unit = runTest("../files/run/t3699.scala")
  @Test def `t3702`(): Unit = runTest("../files/run/t3702.scala")
  @Test def `t3714`(): Unit = runTest("../files/run/t3714.scala")
  @Test def `t3719`(): Unit = runTest("../files/run/t3719.scala")
  @Test def `t3726`(): Unit = runTest("../files/run/t3726.scala")
  @Test def `t3758-old`(): Unit = runTest("../files/run/t3758-old.scala")
  @Test def `t3760`(): Unit = runTest("../files/run/t3760.scala")
  @Test def `t3761-overload-byname`(): Unit = runTest("../files/run/t3761-overload-byname.scala")
  @Test def `t3763`(): Unit = runTest("../files/run/t3763.scala")
  @Test def `t3798`(): Unit = runTest("../files/run/t3798.scala")
  @Test def `t3829`(): Unit = runTest("../files/run/t3829.scala")
  @Test def `t3832`(): Unit = runTest("../files/run/t3832.scala")
  @Test def `t3835`(): Unit = runTest("../files/run/t3835.scala")
  @Test def `t3855`(): Unit = runTest("../files/run/t3855.scala")
  @Test def `t3877`(): Unit = runTest("../files/run/t3877.scala")
  @Test def `t3887`(): Unit = runTest("../files/run/t3887.scala")
  @Test def `t3888`(): Unit = runTest("../files/run/t3888.scala")
  @Test def `t3895`(): Unit = runTest("../files/run/t3895.scala")
  @Test def `t3895b`(): Unit = runTest("../files/run/t3895b.scala")
  @Test def `t3897`(): Unit = runTest("../files/run/t3897")
  @Test def `t3923`(): Unit = runTest("../files/run/t3923.scala")
  @Test def `t3932`(): Unit = runTest("../files/run/t3932.scala")
  @Test def `t3935`(): Unit = runTest("../files/run/t3935.scala")
  @Test def `t3950`(): Unit = runTest("../files/run/t3950.scala")
  @Test def `t3964`(): Unit = runTest("../files/run/t3964.scala")
  @Test def `t3970`(): Unit = runTest("../files/run/t3970.scala")
  @Test def `t3980`(): Unit = runTest("../files/run/t3980.scala")
  @Test def `t3984`(): Unit = runTest("../files/run/t3984.scala")
  @Test def `t3989`(): Unit = runTest("../files/run/t3989.scala")
  @Test def `t3994`(): Unit = runTest("../files/run/t3994.scala")
  @Test def `t3996`(): Unit = runTest("../files/run/t3996.scala")
  @Test def `t4013`(): Unit = runTest("../files/run/t4013.scala")
  @Test def `t4013b`(): Unit = runTest("../files/run/t4013b.scala")
  @Test def `t4013c`(): Unit = runTest("../files/run/t4013c.scala")
  @Test def `t4023`(): Unit = runTest("../files/run/t4023.scala")
  @Test def `t4024`(): Unit = runTest("../files/run/t4024.scala")
  @Test def `t4025`(): Unit = runTest("../files/run/t4025.scala")
  @Test def `t4027`(): Unit = runTest("../files/run/t4027.scala")
  @Test def `t4047`(): Unit = runTest("../files/run/t4047.scala")
  @Test def `t405`(): Unit = runTest("../files/run/t405.scala")
  @Test def `t4054`(): Unit = runTest("../files/run/t4054.scala")
  @Test def `t4062`(): Unit = runTest("../files/run/t4062.scala")
  @Test def `t4072`(): Unit = runTest("../files/run/t4072.scala")
  @Test def `t408`(): Unit = runTest("../files/run/t408.scala")
  @Test def `t4080`(): Unit = runTest("../files/run/t4080.scala")
  @Test def `t4110-new`(): Unit = runTest("../files/run/t4110-new.scala")
  @Test def `t4110-old`(): Unit = runTest("../files/run/t4110-old.scala")
  @Test def `t4119`(): Unit = runTest("../files/run/t4119")
  @Test def `t4122`(): Unit = runTest("../files/run/t4122.scala")
  @Test def `t4124`(): Unit = runTest("../files/run/t4124.scala")
  @Test def `t4147`(): Unit = runTest("../files/run/t4147.scala")
  @Test def `t4148`(): Unit = runTest("../files/run/t4148.scala")
  @Test def `t4171`(): Unit = runTest("../files/run/t4171.scala")
  @Test def `t4172`(): Unit = runTest("../files/run/t4172.scala")
  @Test def `t4190`(): Unit = runTest("../files/run/t4190.scala")
  @Test def `t4201`(): Unit = runTest("../files/run/t4201.scala")
  @Test def `t4216`(): Unit = runTest("../files/run/t4216.scala")
  @Test def `t4238`(): Unit = runTest("../files/run/t4238")
  @Test def `t4283`(): Unit = runTest("../files/run/t4283")
  @Test def `t4285`(): Unit = runTest("../files/run/t4285.scala")
  @Test def `t4287inferredMethodTypes`(): Unit = runTest("../files/run/t4287inferredMethodTypes.scala")
  @Test def `t4288`(): Unit = runTest("../files/run/t4288.scala")
  @Test def `t429`(): Unit = runTest("../files/run/t429.scala")
  @Test def `t4294`(): Unit = runTest("../files/run/t4294.scala")
  @Test def `t4297`(): Unit = runTest("../files/run/t4297.scala")
  @Test def `t4300`(): Unit = runTest("../files/run/t4300.scala")
  @Test def `t4317`(): Unit = runTest("../files/run/t4317")
  @Test def `t4332`(): Unit = runTest("../files/run/t4332.scala")
  @Test def `t4332b`(): Unit = runTest("../files/run/t4332b.scala")
  @Test def `t4351`(): Unit = runTest("../files/run/t4351.scala")
  @Test def `t4396`(): Unit = runTest("../files/run/t4396.scala")
  @Test def `t4398`(): Unit = runTest("../files/run/t4398.scala")
  @Test def `t4415`(): Unit = runTest("../files/run/t4415.scala")
  @Test def `t4426`(): Unit = runTest("../files/run/t4426.scala")
  @Test def `t4459`(): Unit = runTest("../files/run/t4459.scala")
  @Test def `t4461`(): Unit = runTest("../files/run/t4461.scala")
  @Test def `t4482`(): Unit = runTest("../files/run/t4482.scala")
  @Test def `t4535`(): Unit = runTest("../files/run/t4535.scala")
  @Test def `t4536`(): Unit = runTest("../files/run/t4536.scala")
  @Test def `t4537`(): Unit = runTest("../files/run/t4537")
  @Test def `t4542`(): Unit = runTest("../files/run/t4542.scala")
  @Test def `t4558`(): Unit = runTest("../files/run/t4558.scala")
  @Test def `t4560`(): Unit = runTest("../files/run/t4560.scala")
  @Test def `t4560b`(): Unit = runTest("../files/run/t4560b.scala")
  @Test def `t4565_1`(): Unit = runTest("../files/run/t4565_1.scala")
  @Test def `t4570`(): Unit = runTest("../files/run/t4570.scala")
  @Test def `t4577`(): Unit = runTest("../files/run/t4577.scala")
  @Test def `t4582`(): Unit = runTest("../files/run/t4582.scala")
  @Test def `t4592`(): Unit = runTest("../files/run/t4592.scala")
  @Test def `t4594-repl-settings`(): Unit = runTest("../files/run/t4594-repl-settings.scala")
  @Test def `t4601`(): Unit = runTest("../files/run/t4601.scala")
  @Test def `t4608`(): Unit = runTest("../files/run/t4608.scala")
  @Test def `t4617`(): Unit = runTest("../files/run/t4617.scala")
  @Test def `t4656`(): Unit = runTest("../files/run/t4656.scala")
  @Test def `t4658`(): Unit = runTest("../files/run/t4658.scala")
  @Test def `t4660`(): Unit = runTest("../files/run/t4660.scala")
  @Test def `t4671`(): Unit = runTest("../files/run/t4671.scala")
  @Test def `t4680`(): Unit = runTest("../files/run/t4680.scala")
  @Test def `t4697`(): Unit = runTest("../files/run/t4697.scala")
  @Test def `t4709`(): Unit = runTest("../files/run/t4709.scala")
  @Test def `t4710`(): Unit = runTest("../files/run/t4710.scala")
  @Test def `t4723`(): Unit = runTest("../files/run/t4723.scala")
  @Test def `t4729`(): Unit = runTest("../files/run/t4729")
  @Test def `t4742`(): Unit = runTest("../files/run/t4742.scala")
  @Test def `t4750`(): Unit = runTest("../files/run/t4750.scala")
  @Test def `t4752`(): Unit = runTest("../files/run/t4752.scala")
  @Test def `t4753`(): Unit = runTest("../files/run/t4753.scala")
  @Test def `t4761`(): Unit = runTest("../files/run/t4761.scala")
  @Test def `t4766`(): Unit = runTest("../files/run/t4766.scala")
  @Test def `t4770`(): Unit = runTest("../files/run/t4770.scala")
  @Test def `t4777`(): Unit = runTest("../files/run/t4777.scala")
  @Test def `t4788`(): Unit = runTest("../files/run/t4788")
  @Test def `t4788-separate-compilation`(): Unit = runTest("../files/run/t4788-separate-compilation")
  @Test def `t4794`(): Unit = runTest("../files/run/t4794.scala")
  @Test def `t4809`(): Unit = runTest("../files/run/t4809.scala")
  @Test def `t4813`(): Unit = runTest("../files/run/t4813.scala")
  @Test def `t4827`(): Unit = runTest("../files/run/t4827.scala")
  @Test def `t4827b`(): Unit = runTest("../files/run/t4827b.scala")
  @Test def `t4835`(): Unit = runTest("../files/run/t4835.scala")
  @Test def `t4841-isolate-plugins`(): Unit = runTest("../files/run/t4841-isolate-plugins")
  @Test def `t4841-no-plugin`(): Unit = runTest("../files/run/t4841-no-plugin.scala")
  @Test def `t4859`(): Unit = runTest("../files/run/t4859.scala")
  @Test def `t4871`(): Unit = runTest("../files/run/t4871.scala")
  @Test def `t4891`(): Unit = runTest("../files/run/t4891")
  @Test def `t4894`(): Unit = runTest("../files/run/t4894.scala")
  @Test def `t4895`(): Unit = runTest("../files/run/t4895.scala")
  @Test def `t4897`(): Unit = runTest("../files/run/t4897.scala")
  @Test def `t493`(): Unit = runTest("../files/run/t493.scala")
  @Test def `t4930`(): Unit = runTest("../files/run/t4930.scala")
  @Test def `t4935`(): Unit = runTest("../files/run/t4935.scala")
  @Test def `t4950`(): Unit = runTest("../files/run/t4950.scala")
  @Test def `t4954`(): Unit = runTest("../files/run/t4954.scala")
  @Test def `t498`(): Unit = runTest("../files/run/t498.scala")
  @Test def `t4996`(): Unit = runTest("../files/run/t4996.scala")
  @Test def `t5009`(): Unit = runTest("../files/run/t5009.scala")
  @Test def `t5018`(): Unit = runTest("../files/run/t5018.scala")
  @Test def `t5037`(): Unit = runTest("../files/run/t5037.scala")
  @Test def `t5040`(): Unit = runTest("../files/run/t5040.scala")
  @Test def `t5045`(): Unit = runTest("../files/run/t5045.scala")
  @Test def `t5053`(): Unit = runTest("../files/run/t5053.scala")
  @Test def `t5064`(): Unit = runTest("../files/run/t5064.scala")
  @Test def `t5072`(): Unit = runTest("../files/run/t5072.scala")
  @Test def `t5080`(): Unit = runTest("../files/run/t5080.scala")
  @Test def `t5105`(): Unit = runTest("../files/run/t5105.scala")
  @Test def `t5125`(): Unit = runTest("../files/run/t5125.scala")
  @Test def `t5125b`(): Unit = runTest("../files/run/t5125b.scala")
  @Test def `t5134`(): Unit = runTest("../files/run/t5134.scala")
  @Test def `t5158`(): Unit = runTest("../files/run/t5158.scala")
  @Test def `t5162`(): Unit = runTest("../files/run/t5162.scala")
  @Test def `t5171`(): Unit = runTest("../files/run/t5171.scala")
  @Test def `t5201`(): Unit = runTest("../files/run/t5201.scala")
  @Test def `t5224`(): Unit = runTest("../files/run/t5224.scala")
  @Test def `t5225_1`(): Unit = runTest("../files/run/t5225_1.scala")
  @Test def `t5225_2`(): Unit = runTest("../files/run/t5225_2.scala")
  @Test def `t5229_1`(): Unit = runTest("../files/run/t5229_1.scala")
  @Test def `t5229_2`(): Unit = runTest("../files/run/t5229_2.scala")
  @Test def `t5230`(): Unit = runTest("../files/run/t5230.scala")
  @Test def `t5256a`(): Unit = runTest("../files/run/t5256a.scala")
  @Test def `t5256b`(): Unit = runTest("../files/run/t5256b.scala")
  @Test def `t5256c`(): Unit = runTest("../files/run/t5256c.scala")
  @Test def `t5256d`(): Unit = runTest("../files/run/t5256d.scala")
  @Test def `t5256e`(): Unit = runTest("../files/run/t5256e.scala")
  @Test def `t5256f`(): Unit = runTest("../files/run/t5256f.scala")
  @Test def `t5256g`(): Unit = runTest("../files/run/t5256g.scala")
  @Test def `t5256h`(): Unit = runTest("../files/run/t5256h.scala")
  @Test def `t5258a`(): Unit = runTest("../files/run/t5258a.scala")
  @Test def `t5262`(): Unit = runTest("../files/run/t5262.scala")
  @Test def `t5266_1`(): Unit = runTest("../files/run/t5266_1.scala")
  @Test def `t5266_2`(): Unit = runTest("../files/run/t5266_2.scala")
  @Test def `t5269`(): Unit = runTest("../files/run/t5269.scala")
  @Test def `t5270`(): Unit = runTest("../files/run/t5270.scala")
  @Test def `t5271_1`(): Unit = runTest("../files/run/t5271_1.scala")
  @Test def `t5271_2`(): Unit = runTest("../files/run/t5271_2.scala")
  @Test def `t5271_3`(): Unit = runTest("../files/run/t5271_3.scala")
  @Test def `t5271_4`(): Unit = runTest("../files/run/t5271_4.scala")
  @Test def `t5272_1_newpatmat`(): Unit = runTest("../files/run/t5272_1_newpatmat.scala")
  @Test def `t5272_1_oldpatmat`(): Unit = runTest("../files/run/t5272_1_oldpatmat.scala")
  @Test def `t5272_2_newpatmat`(): Unit = runTest("../files/run/t5272_2_newpatmat.scala")
  @Test def `t5272_2_oldpatmat`(): Unit = runTest("../files/run/t5272_2_oldpatmat.scala")
  @Test def `t5273_1_newpatmat`(): Unit = runTest("../files/run/t5273_1_newpatmat.scala")
  @Test def `t5273_1_oldpatmat`(): Unit = runTest("../files/run/t5273_1_oldpatmat.scala")
  @Test def `t5273_2a_newpatmat`(): Unit = runTest("../files/run/t5273_2a_newpatmat.scala")
  @Test def `t5273_2a_oldpatmat`(): Unit = runTest("../files/run/t5273_2a_oldpatmat.scala")
  @Test def `t5273_2b_newpatmat`(): Unit = runTest("../files/run/t5273_2b_newpatmat.scala")
  @Test def `t5273_2b_oldpatmat`(): Unit = runTest("../files/run/t5273_2b_oldpatmat.scala")
  @Test def `t5274_1`(): Unit = runTest("../files/run/t5274_1.scala")
  @Test def `t5274_2`(): Unit = runTest("../files/run/t5274_2.scala")
  @Test def `t5275`(): Unit = runTest("../files/run/t5275.scala")
  @Test def `t5276_1a`(): Unit = runTest("../files/run/t5276_1a.scala")
  @Test def `t5276_1b`(): Unit = runTest("../files/run/t5276_1b.scala")
  @Test def `t5276_2a`(): Unit = runTest("../files/run/t5276_2a.scala")
  @Test def `t5276_2b`(): Unit = runTest("../files/run/t5276_2b.scala")
  @Test def `t5277_1`(): Unit = runTest("../files/run/t5277_1.scala")
  @Test def `t5277_2`(): Unit = runTest("../files/run/t5277_2.scala")
  @Test def `t5279`(): Unit = runTest("../files/run/t5279.scala")
  @Test def `t5284`(): Unit = runTest("../files/run/t5284.scala")
  @Test def `t5284b`(): Unit = runTest("../files/run/t5284b.scala")
  @Test def `t5284c`(): Unit = runTest("../files/run/t5284c.scala")
  @Test def `t5293-map`(): Unit = runTest("../files/run/t5293-map.scala")
  @Test def `t5293`(): Unit = runTest("../files/run/t5293.scala")
  @Test def `t5300`(): Unit = runTest("../files/run/t5300.scala")
  @Test def `t5328`(): Unit = runTest("../files/run/t5328.scala")
  @Test def `t5334_1`(): Unit = runTest("../files/run/t5334_1.scala")
  @Test def `t5334_2`(): Unit = runTest("../files/run/t5334_2.scala")
  @Test def `t5335`(): Unit = runTest("../files/run/t5335.scala")
  @Test def `t5356`(): Unit = runTest("../files/run/t5356.scala")
  @Test def `t5375`(): Unit = runTest("../files/run/t5375.scala")
  @Test def `t5377`(): Unit = runTest("../files/run/t5377.scala")
  @Test def `t5380`(): Unit = runTest("../files/run/t5380.scala")
  @Test def `t5385`(): Unit = runTest("../files/run/t5385.scala")
  @Test def `t5387`(): Unit = runTest("../files/run/t5387.scala")
  @Test def `t5394`(): Unit = runTest("../files/run/t5394.scala")
  @Test def `t5407`(): Unit = runTest("../files/run/t5407.scala")
  @Test def `t5415`(): Unit = runTest("../files/run/t5415.scala")
  @Test def `t5418`(): Unit = runTest("../files/run/t5418.scala")
  @Test def `t5418a`(): Unit = runTest("../files/run/t5418a.scala")
  @Test def `t5418b`(): Unit = runTest("../files/run/t5418b.scala")
  @Test def `t5419`(): Unit = runTest("../files/run/t5419.scala")
  @Test def `t5423`(): Unit = runTest("../files/run/t5423.scala")
  @Test def `t5428`(): Unit = runTest("../files/run/t5428.scala")
  @Test def `t5463`(): Unit = runTest("../files/run/t5463.scala")
  @Test def `t5488-fn`(): Unit = runTest("../files/run/t5488-fn.scala")
  @Test def `t5488`(): Unit = runTest("../files/run/t5488.scala")
  @Test def `t5500`(): Unit = runTest("../files/run/t5500.scala")
  @Test def `t5500b`(): Unit = runTest("../files/run/t5500b.scala")
  @Test def `t5530`(): Unit = runTest("../files/run/t5530.scala")
  @Test def `t5532`(): Unit = runTest("../files/run/t5532.scala")
  @Test def `t5535`(): Unit = runTest("../files/run/t5535.scala")
  @Test def `t5537`(): Unit = runTest("../files/run/t5537.scala")
  @Test def `t5543`(): Unit = runTest("../files/run/t5543.scala")
  @Test def `t5544`(): Unit = runTest("../files/run/t5544")
  @Test def `t5545`(): Unit = runTest("../files/run/t5545.scala")
  @Test def `t5552`(): Unit = runTest("../files/run/t5552.scala")
  @Test def `t5565`(): Unit = runTest("../files/run/t5565.scala")
  @Test def `t5568`(): Unit = runTest("../files/run/t5568.scala")
  @Test def `t5577`(): Unit = runTest("../files/run/t5577.scala")
  @Test def `t5583`(): Unit = runTest("../files/run/t5583.scala")
  @Test def `t5588`(): Unit = runTest("../files/run/t5588.scala")
  @Test def `t5590`(): Unit = runTest("../files/run/t5590.scala")
  @Test def `t5603`(): Unit = runTest("../files/run/t5603.scala")
  @Test def `t5604`(): Unit = runTest("../files/run/t5604.scala")
  @Test def `t5608`(): Unit = runTest("../files/run/t5608.scala")
  @Test def `t5610`(): Unit = runTest("../files/run/t5610.scala")
  @Test def `t5610a`(): Unit = runTest("../files/run/t5610a.scala")
  @Test def `t5612`(): Unit = runTest("../files/run/t5612.scala")
  @Test def `t5614`(): Unit = runTest("../files/run/t5614.scala")
  @Test def `t5629`(): Unit = runTest("../files/run/t5629.scala")
  @Test def `t5629b`(): Unit = runTest("../files/run/t5629b.scala")
  @Test def `t5648`(): Unit = runTest("../files/run/t5648.scala")
  @Test def `t5652`(): Unit = runTest("../files/run/t5652")
  @Test def `t5652b`(): Unit = runTest("../files/run/t5652b")
  @Test def `t5652c`(): Unit = runTest("../files/run/t5652c")
  @Test def `t5655`(): Unit = runTest("../files/run/t5655.scala")
  @Test def `t5656`(): Unit = runTest("../files/run/t5656.scala")
  @Test def `t5665`(): Unit = runTest("../files/run/t5665.scala")
  @Test def `t5676`(): Unit = runTest("../files/run/t5676.scala")
  @Test def `t5680`(): Unit = runTest("../files/run/t5680.scala")
  @Test def `t5688`(): Unit = runTest("../files/run/t5688.scala")
  @Test def `t5699`(): Unit = runTest("../files/run/t5699.scala")
  @Test def `t5704`(): Unit = runTest("../files/run/t5704.scala")
  @Test def `t5710-1`(): Unit = runTest("../files/run/t5710-1.scala")
  @Test def `t5710-2`(): Unit = runTest("../files/run/t5710-2.scala")
  @Test def `t5713`(): Unit = runTest("../files/run/t5713")
  @Test def `t5717`(): Unit = runTest("../files/run/t5717.scala")
  @Test def `t5733`(): Unit = runTest("../files/run/t5733.scala")
  @Test def `t5753_1`(): Unit = runTest("../files/run/t5753_1")
  @Test def `t5753_2`(): Unit = runTest("../files/run/t5753_2")
  @Test def `t576`(): Unit = runTest("../files/run/t576.scala")
  @Test def `t5770`(): Unit = runTest("../files/run/t5770.scala")
  @Test def `t5789`(): Unit = runTest("../files/run/t5789.scala")
  @Test def `t5804`(): Unit = runTest("../files/run/t5804.scala")
  @Test def `t5816`(): Unit = runTest("../files/run/t5816.scala")
  @Test def `t5824`(): Unit = runTest("../files/run/t5824.scala")
  @Test def `t5830`(): Unit = runTest("../files/run/t5830.scala")
  @Test def `t5840`(): Unit = runTest("../files/run/t5840.scala")
  @Test def `t5856`(): Unit = runTest("../files/run/t5856.scala")
  @Test def `t5857`(): Unit = runTest("../files/run/t5857.scala")
  @Test def `t5866`(): Unit = runTest("../files/run/t5866.scala")
  @Test def `t5867`(): Unit = runTest("../files/run/t5867.scala")
  @Test def `t5879`(): Unit = runTest("../files/run/t5879.scala")
  @Test def `t5880`(): Unit = runTest("../files/run/t5880.scala")
  @Test def `t5881`(): Unit = runTest("../files/run/t5881.scala")
  @Test def `t5894`(): Unit = runTest("../files/run/t5894.scala")
  @Test def `t5903a`(): Unit = runTest("../files/run/t5903a")
  @Test def `t5903b`(): Unit = runTest("../files/run/t5903b")
  @Test def `t5903c`(): Unit = runTest("../files/run/t5903c")
  @Test def `t5903d`(): Unit = runTest("../files/run/t5903d")
  @Test def `t5905-features`(): Unit = runTest("../files/run/t5905-features.scala")
  @Test def `t5905b-features`(): Unit = runTest("../files/run/t5905b-features.scala")
  @Test def `t5907`(): Unit = runTest("../files/run/t5907.scala")
  @Test def `t5912`(): Unit = runTest("../files/run/t5912.scala")
  @Test def `t5914`(): Unit = runTest("../files/run/t5914.scala")
  @Test def `t5923a`(): Unit = runTest("../files/run/t5923a")
  @Test def `t5923b`(): Unit = runTest("../files/run/t5923b")
  @Test def `t5923c`(): Unit = runTest("../files/run/t5923c.scala")
  @Test def `t5923d`(): Unit = runTest("../files/run/t5923d")
  @Test def `t5937`(): Unit = runTest("../files/run/t5937.scala")
  @Test def `t5938`(): Unit = runTest("../files/run/t5938.scala")
  @Test def `t594`(): Unit = runTest("../files/run/t594.scala")
  @Test def `t5940`(): Unit = runTest("../files/run/t5940.scala")
  @Test def `t5942`(): Unit = runTest("../files/run/t5942.scala")
  @Test def `t5943a1`(): Unit = runTest("../files/run/t5943a1.scala")
  @Test def `t5943a2`(): Unit = runTest("../files/run/t5943a2.scala")
  @Test def `t5966`(): Unit = runTest("../files/run/t5966.scala")
  @Test def `t5971`(): Unit = runTest("../files/run/t5971.scala")
  @Test def `t5974`(): Unit = runTest("../files/run/t5974.scala")
  @Test def `t5986`(): Unit = runTest("../files/run/t5986.scala")
  @Test def `t601`(): Unit = runTest("../files/run/t601.scala")
  @Test def `t6011b`(): Unit = runTest("../files/run/t6011b.scala")
  @Test def `t6011c`(): Unit = runTest("../files/run/t6011c.scala")
  @Test def `t6023`(): Unit = runTest("../files/run/t6023.scala")
  @Test def `t6028`(): Unit = runTest("../files/run/t6028.scala")
  @Test def `t603`(): Unit = runTest("../files/run/t603.scala")
  @Test def `t6052`(): Unit = runTest("../files/run/t6052.scala")
  @Test def `t6063`(): Unit = runTest("../files/run/t6063")
  @Test def `t6064`(): Unit = runTest("../files/run/t6064.scala")
  @Test def `t6070`(): Unit = runTest("../files/run/t6070.scala")
  @Test def `t6077_patmat_cse_irrefutable`(): Unit = runTest("../files/run/t6077_patmat_cse_irrefutable.scala")
  @Test def `t6086-repl`(): Unit = runTest("../files/run/t6086-repl.scala")
  @Test def `t6086-vanilla`(): Unit = runTest("../files/run/t6086-vanilla.scala")
  @Test def `t6089`(): Unit = runTest("../files/run/t6089.scala")
  @Test def `t6090`(): Unit = runTest("../files/run/t6090.scala")
  @Test def `t6102`(): Unit = runTest("../files/run/t6102.scala")
  @Test def `t6104`(): Unit = runTest("../files/run/t6104.scala")
  @Test def `t6111`(): Unit = runTest("../files/run/t6111.scala")
  @Test def `t6113`(): Unit = runTest("../files/run/t6113.scala")
  @Test def `t6114`(): Unit = runTest("../files/run/t6114.scala")
  @Test def `t6126`(): Unit = runTest("../files/run/t6126.scala")
  @Test def `t6135`(): Unit = runTest("../files/run/t6135.scala")
  @Test def `t6146b`(): Unit = runTest("../files/run/t6146b.scala")
  @Test def `t6150`(): Unit = runTest("../files/run/t6150.scala")
  @Test def `t6154`(): Unit = runTest("../files/run/t6154.scala")
  @Test def `t6168`(): Unit = runTest("../files/run/t6168")
  @Test def `t6168b`(): Unit = runTest("../files/run/t6168b")
  @Test def `t6175`(): Unit = runTest("../files/run/t6175.scala")
  @Test def `t6178`(): Unit = runTest("../files/run/t6178.scala")
  @Test def `t6181`(): Unit = runTest("../files/run/t6181.scala")
  @Test def `t6187`(): Unit = runTest("../files/run/t6187.scala")
  @Test def `t6187b`(): Unit = runTest("../files/run/t6187b.scala")
  @Test def `t6188`(): Unit = runTest("../files/run/t6188.scala")
  @Test def `t6194`(): Unit = runTest("../files/run/t6194.scala")
  @Test def `t6196`(): Unit = runTest("../files/run/t6196.scala")
  @Test def `t6197`(): Unit = runTest("../files/run/t6197.scala")
  @Test def `t6198`(): Unit = runTest("../files/run/t6198.scala")
  @Test def `t6199-mirror`(): Unit = runTest("../files/run/t6199-mirror.scala")
  @Test def `t6199-toolbox`(): Unit = runTest("../files/run/t6199-toolbox.scala")
  @Test def `t6200`(): Unit = runTest("../files/run/t6200.scala")
  @Test def `t6206`(): Unit = runTest("../files/run/t6206.scala")
  @Test def `t6220`(): Unit = runTest("../files/run/t6220.scala")
  @Test def `t6221`(): Unit = runTest("../files/run/t6221")
  @Test def `t6223`(): Unit = runTest("../files/run/t6223.scala")
  @Test def `t6240-universe-code-gen`(): Unit = runTest("../files/run/t6240-universe-code-gen.scala")
  @Test def `t6240a`(): Unit = runTest("../files/run/t6240a")
  @Test def `t6240b`(): Unit = runTest("../files/run/t6240b")
  @Test def `t6246`(): Unit = runTest("../files/run/t6246.scala")
  @Test def `t6253a`(): Unit = runTest("../files/run/t6253a.scala")
  @Test def `t6253b`(): Unit = runTest("../files/run/t6253b.scala")
  @Test def `t6253c`(): Unit = runTest("../files/run/t6253c.scala")
  @Test def `t6259`(): Unit = runTest("../files/run/t6259.scala")
  @Test def `t6260-delambdafy`(): Unit = runTest("../files/run/t6260-delambdafy.scala")
  @Test def `t6260`(): Unit = runTest("../files/run/t6260.scala")
  @Test def `t6260b`(): Unit = runTest("../files/run/t6260b.scala")
  @Test def `t6260c`(): Unit = runTest("../files/run/t6260c.scala")
  @Test def `t6261`(): Unit = runTest("../files/run/t6261.scala")
  @Test def `t627`(): Unit = runTest("../files/run/t627.scala")
  @Test def `t6271`(): Unit = runTest("../files/run/t6271.scala")
  @Test def `t6272`(): Unit = runTest("../files/run/t6272.scala")
  @Test def `t6273`(): Unit = runTest("../files/run/t6273.scala")
  @Test def `t6277`(): Unit = runTest("../files/run/t6277.scala")
  @Test def `t6287`(): Unit = runTest("../files/run/t6287.scala")
  @Test def `t6288`(): Unit = runTest("../files/run/t6288.scala")
  @Test def `t629`(): Unit = runTest("../files/run/t629.scala")
  @Test def `t6290`(): Unit = runTest("../files/run/t6290.scala")
  @Test def `t6292`(): Unit = runTest("../files/run/t6292.scala")
  @Test def `t6308`(): Unit = runTest("../files/run/t6308.scala")
  @Test def `t6309`(): Unit = runTest("../files/run/t6309.scala")
  @Test def `t6318_derived`(): Unit = runTest("../files/run/t6318_derived.scala")
  @Test def `t6318_primitives`(): Unit = runTest("../files/run/t6318_primitives.scala")
  @Test def `t6320`(): Unit = runTest("../files/run/t6320.scala")
  @Test def `t6323b`(): Unit = runTest("../files/run/t6323b.scala")
  @Test def `t6327`(): Unit = runTest("../files/run/t6327.scala")
  @Test def `t6329_repl`(): Unit = runTest("../files/run/t6329_repl.scala")
  @Test def `t6329_repl_bug`(): Unit = runTest("../files/run/t6329_repl_bug.scala")
  @Test def `t6329_vanilla`(): Unit = runTest("../files/run/t6329_vanilla.scala")
  @Test def `t6329_vanilla_bug`(): Unit = runTest("../files/run/t6329_vanilla_bug.scala")
  @Test def `t6331`(): Unit = runTest("../files/run/t6331.scala")
  @Test def `t6331b`(): Unit = runTest("../files/run/t6331b.scala")
  @Test def `t6333`(): Unit = runTest("../files/run/t6333.scala")
  @Test def `t6337a`(): Unit = runTest("../files/run/t6337a.scala")
  @Test def `t6344`(): Unit = runTest("../files/run/t6344.scala")
  @Test def `t6353`(): Unit = runTest("../files/run/t6353.scala")
  @Test def `t6355`(): Unit = runTest("../files/run/t6355.scala")
  @Test def `t6370`(): Unit = runTest("../files/run/t6370.scala")
  @Test def `t6379`(): Unit = runTest("../files/run/t6379")
  @Test def `t6380`(): Unit = runTest("../files/run/t6380.scala")
  @Test def `t6381`(): Unit = runTest("../files/run/t6381.scala")
  @Test def `t6385`(): Unit = runTest("../files/run/t6385.scala")
  @Test def `t6392a`(): Unit = runTest("../files/run/t6392a.scala")
  @Test def `t6392b`(): Unit = runTest("../files/run/t6392b.scala")
  @Test def `t6394a`(): Unit = runTest("../files/run/t6394a")
  @Test def `t6394b`(): Unit = runTest("../files/run/t6394b")
  @Test def `t6406-regextract`(): Unit = runTest("../files/run/t6406-regextract.scala")
  @Test def `t6410`(): Unit = runTest("../files/run/t6410.scala")
  @Test def `t6411a`(): Unit = runTest("../files/run/t6411a.scala")
  @Test def `t6411b`(): Unit = runTest("../files/run/t6411b.scala")
  @Test def `t6434`(): Unit = runTest("../files/run/t6434.scala")
  @Test def `t6439`(): Unit = runTest("../files/run/t6439.scala")
  @Test def `t6440`(): Unit = runTest("../files/run/t6440.scala")
  @Test def `t6440b`(): Unit = runTest("../files/run/t6440b.scala")
  @Test def `t6443-by-name`(): Unit = runTest("../files/run/t6443-by-name.scala")
  @Test def `t6443-varargs`(): Unit = runTest("../files/run/t6443-varargs.scala")
  @Test def `t6443`(): Unit = runTest("../files/run/t6443.scala")
  @Test def `t6443b`(): Unit = runTest("../files/run/t6443b.scala")
  @Test def `t6448`(): Unit = runTest("../files/run/t6448.scala")
  @Test def `t6467`(): Unit = runTest("../files/run/t6467.scala")
  @Test def `t6481`(): Unit = runTest("../files/run/t6481.scala")
  @Test def `t6488`(): Unit = runTest("../files/run/t6488.scala")
  @Test def `t6500`(): Unit = runTest("../files/run/t6500.scala")
  @Test def `t6502`(): Unit = runTest("../files/run/t6502.scala")
  @Test def `t6506`(): Unit = runTest("../files/run/t6506.scala")
  @Test def `t6507`(): Unit = runTest("../files/run/t6507.scala")
  @Test def `t6534`(): Unit = runTest("../files/run/t6534.scala")
  @Test def `t6541-option`(): Unit = runTest("../files/run/t6541-option.scala")
  @Test def `t6541`(): Unit = runTest("../files/run/t6541.scala")
  @Test def `t6548`(): Unit = runTest("../files/run/t6548")
  @Test def `t6549`(): Unit = runTest("../files/run/t6549.scala")
  @Test def `t6554`(): Unit = runTest("../files/run/t6554.scala")
  @Test def `t6555`(): Unit = runTest("../files/run/t6555.scala")
  @Test def `t6559`(): Unit = runTest("../files/run/t6559.scala")
  @Test def `t657`(): Unit = runTest("../files/run/t657.scala")
  @Test def `t6574b`(): Unit = runTest("../files/run/t6574b.scala")
  @Test def `t6584`(): Unit = runTest("../files/run/t6584.scala")
  @Test def `t6591_1`(): Unit = runTest("../files/run/t6591_1.scala")
  @Test def `t6591_2`(): Unit = runTest("../files/run/t6591_2.scala")
  @Test def `t6591_3`(): Unit = runTest("../files/run/t6591_3.scala")
  @Test def `t6591_5`(): Unit = runTest("../files/run/t6591_5.scala")
  @Test def `t6591_6`(): Unit = runTest("../files/run/t6591_6.scala")
  @Test def `t6591_7`(): Unit = runTest("../files/run/t6591_7.scala")
  @Test def `t6608`(): Unit = runTest("../files/run/t6608.scala")
  @Test def `t6611`(): Unit = runTest("../files/run/t6611.scala")
  @Test def `t6614`(): Unit = runTest("../files/run/t6614.scala")
  @Test def `t6622`(): Unit = runTest("../files/run/t6622.scala")
  @Test def `t6628`(): Unit = runTest("../files/run/t6628.scala")
  @Test def `t6632`(): Unit = runTest("../files/run/t6632.scala")
  @Test def `t6633`(): Unit = runTest("../files/run/t6633.scala")
  @Test def `t6634`(): Unit = runTest("../files/run/t6634.scala")
  @Test def `t6637`(): Unit = runTest("../files/run/t6637.scala")
  @Test def `t6644`(): Unit = runTest("../files/run/t6644.scala")
  @Test def `t6646`(): Unit = runTest("../files/run/t6646.scala")
  @Test def `t6662`(): Unit = runTest("../files/run/t6662")
  @Test def `t6663`(): Unit = runTest("../files/run/t6663.scala")
  @Test def `t6666a`(): Unit = runTest("../files/run/t6666a.scala")
  @Test def `t6669`(): Unit = runTest("../files/run/t6669.scala")
  @Test def `t6673`(): Unit = runTest("../files/run/t6673.scala")
  @Test def `t6677`(): Unit = runTest("../files/run/t6677.scala")
  @Test def `t6677b`(): Unit = runTest("../files/run/t6677b.scala")
  @Test def `t6687`(): Unit = runTest("../files/run/t6687.scala")
  @Test def `t6690`(): Unit = runTest("../files/run/t6690.scala")
  @Test def `t6695`(): Unit = runTest("../files/run/t6695.scala")
  @Test def `t6706`(): Unit = runTest("../files/run/t6706.scala")
  @Test def `t6715`(): Unit = runTest("../files/run/t6715.scala")
  @Test def `t6719`(): Unit = runTest("../files/run/t6719.scala")
  @Test def `t6725-1`(): Unit = runTest("../files/run/t6725-1.scala")
  @Test def `t6725-2`(): Unit = runTest("../files/run/t6725-2.scala")
  @Test def `t6731`(): Unit = runTest("../files/run/t6731.scala")
  @Test def `t6732`(): Unit = runTest("../files/run/t6732.scala")
  @Test def `t6733`(): Unit = runTest("../files/run/t6733.scala")
  @Test def `t6745-2`(): Unit = runTest("../files/run/t6745-2.scala")
  @Test def `t6793`(): Unit = runTest("../files/run/t6793.scala")
  @Test def `t6793b`(): Unit = runTest("../files/run/t6793b.scala")
  @Test def `t6793c`(): Unit = runTest("../files/run/t6793c.scala")
  @Test def `t6814`(): Unit = runTest("../files/run/t6814")
  @Test def `t6827`(): Unit = runTest("../files/run/t6827.scala")
  @Test def `t6853`(): Unit = runTest("../files/run/t6853.scala")
  @Test def `t6860`(): Unit = runTest("../files/run/t6860.scala")
  @Test def `t6863`(): Unit = runTest("../files/run/t6863.scala")
  @Test def `t6888`(): Unit = runTest("../files/run/t6888.scala")
  @Test def `t6900`(): Unit = runTest("../files/run/t6900.scala")
  @Test def `t6908`(): Unit = runTest("../files/run/t6908.scala")
  @Test def `t6911`(): Unit = runTest("../files/run/t6911.scala")
  @Test def `t6928-run`(): Unit = runTest("../files/run/t6928-run.scala")
  @Test def `t6935`(): Unit = runTest("../files/run/t6935.scala")
  @Test def `t6937`(): Unit = runTest("../files/run/t6937.scala")
  @Test def `t6957`(): Unit = runTest("../files/run/t6957.scala")
  @Test def `t6968`(): Unit = runTest("../files/run/t6968.scala")
  @Test def `t6969`(): Unit = runTest("../files/run/t6969.scala")
  @Test def `t6988`(): Unit = runTest("../files/run/t6988.scala")
  @Test def `t6989`(): Unit = runTest("../files/run/t6989")
  @Test def `t6992`(): Unit = runTest("../files/run/t6992")
  @Test def `t7008`(): Unit = runTest("../files/run/t7008")
  @Test def `t7008-scala-defined`(): Unit = runTest("../files/run/t7008-scala-defined")
  @Test def `t7015`(): Unit = runTest("../files/run/t7015.scala")
  @Test def `t7019`(): Unit = runTest("../files/run/t7019.scala")
  @Test def `t7039`(): Unit = runTest("../files/run/t7039.scala")
  @Test def `t7044`(): Unit = runTest("../files/run/t7044")
  @Test def `t7045`(): Unit = runTest("../files/run/t7045.scala")
  @Test def `t7046`(): Unit = runTest("../files/run/t7046.scala")
  @Test def `t7047`(): Unit = runTest("../files/run/t7047")
  @Test def `t7088`(): Unit = runTest("../files/run/t7088.scala")
  @Test def `t7096`(): Unit = runTest("../files/run/t7096.scala")
  @Test def `t7106`(): Unit = runTest("../files/run/t7106")
  @Test def `t7120`(): Unit = runTest("../files/run/t7120")
  @Test def `t7120b`(): Unit = runTest("../files/run/t7120b.scala")
  @Test def `t7151`(): Unit = runTest("../files/run/t7151.scala")
  @Test def `t7157`(): Unit = runTest("../files/run/t7157")
  @Test def `t7171`(): Unit = runTest("../files/run/t7171.scala")
  @Test def `t7181`(): Unit = runTest("../files/run/t7181.scala")
  @Test def `t7185`(): Unit = runTest("../files/run/t7185.scala")
  @Test def `t7198`(): Unit = runTest("../files/run/t7198.scala")
  @Test def `t720`(): Unit = runTest("../files/run/t720.scala")
  @Test def `t7200`(): Unit = runTest("../files/run/t7200.scala")
  @Test def `t7214`(): Unit = runTest("../files/run/t7214.scala")
  @Test def `t7215`(): Unit = runTest("../files/run/t7215.scala")
  @Test def `t7223`(): Unit = runTest("../files/run/t7223.scala")
  @Test def `t7231`(): Unit = runTest("../files/run/t7231.scala")
  @Test def `t7235`(): Unit = runTest("../files/run/t7235.scala")
  @Test def `t7240`(): Unit = runTest("../files/run/t7240")
  @Test def `t7242`(): Unit = runTest("../files/run/t7242.scala")
  @Test def `t7246`(): Unit = runTest("../files/run/t7246")
  @Test def `t7246b`(): Unit = runTest("../files/run/t7246b")
  @Test def `t7249`(): Unit = runTest("../files/run/t7249.scala")
  @Test def `t7269`(): Unit = runTest("../files/run/t7269.scala")
  @Test def `t7271`(): Unit = runTest("../files/run/t7271.scala")
  @Test def `t7290`(): Unit = runTest("../files/run/t7290.scala")
  @Test def `t7291`(): Unit = runTest("../files/run/t7291.scala")
  @Test def `t7300`(): Unit = runTest("../files/run/t7300.scala")
  @Test def `t7319`(): Unit = runTest("../files/run/t7319.scala")
  @Test def `t7325`(): Unit = runTest("../files/run/t7325.scala")
  @Test def `t7326`(): Unit = runTest("../files/run/t7326.scala")
  @Test def `t7328`(): Unit = runTest("../files/run/t7328.scala")
  @Test def `t7331a`(): Unit = runTest("../files/run/t7331a.scala")
  @Test def `t7331b`(): Unit = runTest("../files/run/t7331b.scala")
  @Test def `t7331c`(): Unit = runTest("../files/run/t7331c.scala")
  @Test def `t7336`(): Unit = runTest("../files/run/t7336.scala")
  @Test def `t7337`(): Unit = runTest("../files/run/t7337.scala")
  @Test def `t7341`(): Unit = runTest("../files/run/t7341.scala")
  @Test def `t7359`(): Unit = runTest("../files/run/t7359")
  @Test def `t7374`(): Unit = runTest("../files/run/t7374")
  @Test def `t7375a`(): Unit = runTest("../files/run/t7375a.scala")
  @Test def `t7375b`(): Unit = runTest("../files/run/t7375b")
  @Test def `t7398`(): Unit = runTest("../files/run/t7398.scala")
  @Test def `t7406`(): Unit = runTest("../files/run/t7406.scala")
  @Test def `t7407`(): Unit = runTest("../files/run/t7407.scala")
  @Test def `t7407b`(): Unit = runTest("../files/run/t7407b.scala")
  @Test def `t7436`(): Unit = runTest("../files/run/t7436.scala")
  @Test def `t7439`(): Unit = runTest("../files/run/t7439")
  @Test def `t744`(): Unit = runTest("../files/run/t744.scala")
  @Test def `t7455`(): Unit = runTest("../files/run/t7455")
  @Test def `t7459a`(): Unit = runTest("../files/run/t7459a.scala")
  @Test def `t7459b-optimize`(): Unit = runTest("../files/run/t7459b-optimize.scala")
  @Test def `t7459b`(): Unit = runTest("../files/run/t7459b.scala")
  @Test def `t7459c`(): Unit = runTest("../files/run/t7459c.scala")
  @Test def `t7459d`(): Unit = runTest("../files/run/t7459d.scala")
  @Test def `t7459f`(): Unit = runTest("../files/run/t7459f.scala")
  @Test def `t7475b`(): Unit = runTest("../files/run/t7475b.scala")
  @Test def `t7482a`(): Unit = runTest("../files/run/t7482a.scala")
  @Test def `t7498`(): Unit = runTest("../files/run/t7498.scala")
  @Test def `t7507`(): Unit = runTest("../files/run/t7507.scala")
  @Test def `t751`(): Unit = runTest("../files/run/t751.scala")
  @Test def `t7510`(): Unit = runTest("../files/run/t7510")
  @Test def `t7521`(): Unit = runTest("../files/run/t7521")
  @Test def `t7521b`(): Unit = runTest("../files/run/t7521b.scala")
  @Test def `t7533`(): Unit = runTest("../files/run/t7533.scala")
  @Test def `t7556`(): Unit = runTest("../files/run/t7556")
  @Test def `t7558`(): Unit = runTest("../files/run/t7558.scala")
  @Test def `t7569`(): Unit = runTest("../files/run/t7569.scala")
  @Test def `t7570a`(): Unit = runTest("../files/run/t7570a.scala")
  @Test def `t7570b`(): Unit = runTest("../files/run/t7570b.scala")
  @Test def `t7570c`(): Unit = runTest("../files/run/t7570c.scala")
  @Test def `t7571`(): Unit = runTest("../files/run/t7571.scala")
  @Test def `t7582`(): Unit = runTest("../files/run/t7582")
  @Test def `t7582-private-within`(): Unit = runTest("../files/run/t7582-private-within")
  @Test def `t7582b`(): Unit = runTest("../files/run/t7582b")
  @Test def `t7584`(): Unit = runTest("../files/run/t7584.scala")
  @Test def `t7584b`(): Unit = runTest("../files/run/t7584b.scala")
  @Test def `t7617a`(): Unit = runTest("../files/run/t7617a")
  @Test def `t7617b`(): Unit = runTest("../files/run/t7617b")
  @Test def `t7634`(): Unit = runTest("../files/run/t7634.scala")
  @Test def `t7657`(): Unit = runTest("../files/run/t7657")
  @Test def `t7700`(): Unit = runTest("../files/run/t7700.scala")
  @Test def `t7711-script-args`(): Unit = runTest("../files/run/t7711-script-args.scala")
  @Test def `t7715`(): Unit = runTest("../files/run/t7715.scala")
  @Test def `t7741a`(): Unit = runTest("../files/run/t7741a")
  @Test def `t7741b`(): Unit = runTest("../files/run/t7741b")
  @Test def `t7747-repl`(): Unit = runTest("../files/run/t7747-repl.scala")
  @Test def `t7763`(): Unit = runTest("../files/run/t7763.scala")
  @Test def `t7775`(): Unit = runTest("../files/run/t7775.scala")
  @Test def `t7777`(): Unit = runTest("../files/run/t7777")
  @Test def `t7779`(): Unit = runTest("../files/run/t7779.scala")
  @Test def `t7791-script-linenums`(): Unit = runTest("../files/run/t7791-script-linenums.scala")
  @Test def `t7801`(): Unit = runTest("../files/run/t7801.scala")
  @Test def `t7805-repl-i`(): Unit = runTest("../files/run/t7805-repl-i.scala")
  @Test def `t7807`(): Unit = runTest("../files/run/t7807.scala")
  @Test def `t7817-tree-gen`(): Unit = runTest("../files/run/t7817-tree-gen.scala")
  @Test def `t7817`(): Unit = runTest("../files/run/t7817.scala")
  @Test def `t7825`(): Unit = runTest("../files/run/t7825.scala")
  @Test def `t7850c`(): Unit = runTest("../files/run/t7850c.scala")
  @Test def `t7850d`(): Unit = runTest("../files/run/t7850d.scala")
  @Test def `t7852`(): Unit = runTest("../files/run/t7852.scala")
  @Test def `t7859`(): Unit = runTest("../files/run/t7859")
  @Test def `t7868`(): Unit = runTest("../files/run/t7868.scala")
  @Test def `t7868b`(): Unit = runTest("../files/run/t7868b.scala")
  @Test def `t7871`(): Unit = runTest("../files/run/t7871")
  @Test def `t7876`(): Unit = runTest("../files/run/t7876.scala")
  @Test def `t7880`(): Unit = runTest("../files/run/t7880.scala")
  @Test def `t7899-regression`(): Unit = runTest("../files/run/t7899-regression.scala")
  @Test def `t7899`(): Unit = runTest("../files/run/t7899.scala")
  @Test def `t7912`(): Unit = runTest("../files/run/t7912.scala")
  @Test def `t7932`(): Unit = runTest("../files/run/t7932.scala")
  @Test def `t7965`(): Unit = runTest("../files/run/t7965.scala")
  @Test def `t7974`(): Unit = runTest("../files/run/t7974")
  @Test def `t7985`(): Unit = runTest("../files/run/t7985.scala")
  @Test def `t7985b`(): Unit = runTest("../files/run/t7985b.scala")
  @Test def `t7992`(): Unit = runTest("../files/run/t7992.scala")
  @Test def `t7992b`(): Unit = runTest("../files/run/t7992b.scala")
  @Test def `t8002`(): Unit = runTest("../files/run/t8002.scala")
  @Test def `t8010`(): Unit = runTest("../files/run/t8010.scala")
  @Test def `t8015-ffc`(): Unit = runTest("../files/run/t8015-ffc.scala")
  @Test def `t8017`(): Unit = runTest("../files/run/t8017")
  @Test def `t8029`(): Unit = runTest("../files/run/t8029.scala")
  @Test def `t8046`(): Unit = runTest("../files/run/t8046")
  @Test def `t8047`(): Unit = runTest("../files/run/t8047.scala")
  @Test def `t8048a`(): Unit = runTest("../files/run/t8048a")
  @Test def `t8048b`(): Unit = runTest("../files/run/t8048b")
  @Test def `t8087`(): Unit = runTest("../files/run/t8087.scala")
  @Test def `t8091`(): Unit = runTest("../files/run/t8091.scala")
  @Test def `t8100`(): Unit = runTest("../files/run/t8100.scala")
  @Test def `t8104`(): Unit = runTest("../files/run/t8104")
  @Test def `t8133`(): Unit = runTest("../files/run/t8133")
  @Test def `t8133b`(): Unit = runTest("../files/run/t8133b")
  @Test def `t8153`(): Unit = runTest("../files/run/t8153.scala")
  @Test def `t8177f`(): Unit = runTest("../files/run/t8177f.scala")
  @Test def `t8188`(): Unit = runTest("../files/run/t8188.scala")
  @Test def `t8190`(): Unit = runTest("../files/run/t8190.scala")
  @Test def `t8192`(): Unit = runTest("../files/run/t8192")
  @Test def `t8196`(): Unit = runTest("../files/run/t8196.scala")
  @Test def `t8197`(): Unit = runTest("../files/run/t8197.scala")
  @Test def `t8197b`(): Unit = runTest("../files/run/t8197b.scala")
  @Test def `t8199`(): Unit = runTest("../files/run/t8199.scala")
  @Test def `t8233`(): Unit = runTest("../files/run/t8233.scala")
  @Test def `t8245`(): Unit = runTest("../files/run/t8245.scala")
  @Test def `t8253`(): Unit = runTest("../files/run/t8253.scala")
  @Test def `t8266-octal-interp`(): Unit = runTest("../files/run/t8266-octal-interp.scala")
  @Test def `t8280`(): Unit = runTest("../files/run/t8280.scala")
  @Test def `t8321`(): Unit = runTest("../files/run/t8321")
  @Test def `t8334`(): Unit = runTest("../files/run/t8334.scala")
  @Test def `t8395`(): Unit = runTest("../files/run/t8395.scala")
  @Test def `t8425`(): Unit = runTest("../files/run/t8425")
  @Test def `t8428`(): Unit = runTest("../files/run/t8428.scala")
  @Test def `t8437`(): Unit = runTest("../files/run/t8437")
  @Test def `t8442`(): Unit = runTest("../files/run/t8442")
  @Test def `t8445`(): Unit = runTest("../files/run/t8445.scala")
  @Test def `t8502`(): Unit = runTest("../files/run/t8502.scala")
  @Test def `t8502b`(): Unit = runTest("../files/run/t8502b.scala")
  @Test def `t8549`(): Unit = runTest("../files/run/t8549.scala")
  @Test def `t8549b`(): Unit = runTest("../files/run/t8549b.scala")
  @Test def `t8570`(): Unit = runTest("../files/run/t8570.scala")
  @Test def `t8570a`(): Unit = runTest("../files/run/t8570a.scala")
  @Test def `t8574`(): Unit = runTest("../files/run/t8574.scala")
  @Test def `t8575`(): Unit = runTest("../files/run/t8575.scala")
  @Test def `t8575b`(): Unit = runTest("../files/run/t8575b.scala")
  @Test def `t8575c`(): Unit = runTest("../files/run/t8575c.scala")
  @Test def `t8601-closure-elim`(): Unit = runTest("../files/run/t8601-closure-elim.scala")
  @Test def `t8601`(): Unit = runTest("../files/run/t8601.scala")
  @Test def `t8601b`(): Unit = runTest("../files/run/t8601b.scala")
  @Test def `t8601c`(): Unit = runTest("../files/run/t8601c.scala")
  @Test def `t8601d`(): Unit = runTest("../files/run/t8601d.scala")
  @Test def `t8601e`(): Unit = runTest("../files/run/t8601e")
  @Test def `t8607`(): Unit = runTest("../files/run/t8607.scala")
  @Test def `t8608-no-format`(): Unit = runTest("../files/run/t8608-no-format.scala")
  @Test def `t8610`(): Unit = runTest("../files/run/t8610.scala")
  @Test def `t8611a`(): Unit = runTest("../files/run/t8611a.scala")
  @Test def `t8611b`(): Unit = runTest("../files/run/t8611b.scala")
  @Test def `t8611c`(): Unit = runTest("../files/run/t8611c.scala")
  @Test def `t8637`(): Unit = runTest("../files/run/t8637.scala")
  @Test def `t8680`(): Unit = runTest("../files/run/t8680.scala")
  @Test def `t8690`(): Unit = runTest("../files/run/t8690.scala")
  @Test def `t8708_b`(): Unit = runTest("../files/run/t8708_b")
  @Test def `t8710`(): Unit = runTest("../files/run/t8710.scala")
  @Test def `t8738`(): Unit = runTest("../files/run/t8738.scala")
  @Test def `t874`(): Unit = runTest("../files/run/t874.scala")
  @Test def `t8756`(): Unit = runTest("../files/run/t8756.scala")
  @Test def `t8803`(): Unit = runTest("../files/run/t8803.scala")
  @Test def `t8823`(): Unit = runTest("../files/run/t8823.scala")
  @Test def `t8843-repl-xlat`(): Unit = runTest("../files/run/t8843-repl-xlat.scala")
  @Test def `t8845`(): Unit = runTest("../files/run/t8845.scala")
  @Test def `t8852a`(): Unit = runTest("../files/run/t8852a.scala")
  @Test def `t8888`(): Unit = runTest("../files/run/t8888.scala")
  @Test def `t889`(): Unit = runTest("../files/run/t889.scala")
  @Test def `t8893`(): Unit = runTest("../files/run/t8893.scala")
  @Test def `t8893b`(): Unit = runTest("../files/run/t8893b.scala")
  @Test def `t8907`(): Unit = runTest("../files/run/t8907.scala")
  @Test def `t8918-unary-ids`(): Unit = runTest("../files/run/t8918-unary-ids.scala")
  @Test def `t8925`(): Unit = runTest("../files/run/t8925.scala")
  @Test def `t8931`(): Unit = runTest("../files/run/t8931.scala")
  @Test def `t8933`(): Unit = runTest("../files/run/t8933")
  @Test def `t8933b`(): Unit = runTest("../files/run/t8933b")
  @Test def `t8933c`(): Unit = runTest("../files/run/t8933c.scala")
  @Test def `t8944`(): Unit = runTest("../files/run/t8944")
  @Test def `t8944b`(): Unit = runTest("../files/run/t8944b.scala")
  @Test def `t8944c`(): Unit = runTest("../files/run/t8944c.scala")
  @Test def `t8955`(): Unit = runTest("../files/run/t8955.scala")
  @Test def `t8960`(): Unit = runTest("../files/run/t8960.scala")
  @Test def `t9003`(): Unit = runTest("../files/run/t9003.scala")
  @Test def `t9027`(): Unit = runTest("../files/run/t9027.scala")
  @Test def `t9029`(): Unit = runTest("../files/run/t9029.scala")
  @Test def `t9029b`(): Unit = runTest("../files/run/t9029b.scala")
  @Test def `t9029c`(): Unit = runTest("../files/run/t9029c.scala")
  @Test def `t9030`(): Unit = runTest("../files/run/t9030.scala")
  @Test def `t9097`(): Unit = runTest("../files/run/t9097.scala")
  @Test def `t9102`(): Unit = runTest("../files/run/t9102.scala")
  @Test def `t9110`(): Unit = runTest("../files/run/t9110.scala")
  @Test def `t9170`(): Unit = runTest("../files/run/t9170.scala")
  @Test def `t9174`(): Unit = runTest("../files/run/t9174.scala")
  @Test def `t9178a`(): Unit = runTest("../files/run/t9178a.scala")
  @Test def `t9182`(): Unit = runTest("../files/run/t9182.scala")
  @Test def `t920`(): Unit = runTest("../files/run/t920.scala")
  @Test def `t9200`(): Unit = runTest("../files/run/t9200")
  @Test def `t9206`(): Unit = runTest("../files/run/t9206.scala")
  @Test def `t9219`(): Unit = runTest("../files/run/t9219.scala")
  @Test def `t9223`(): Unit = runTest("../files/run/t9223.scala")
  @Test def `t9223b`(): Unit = runTest("../files/run/t9223b.scala")
  @Test def `t9252`(): Unit = runTest("../files/run/t9252.scala")
  @Test def `t9268`(): Unit = runTest("../files/run/t9268")
  @Test def `t9298`(): Unit = runTest("../files/run/t9298")
  @Test def `t9298b`(): Unit = runTest("../files/run/t9298b")
  @Test def `t9349`(): Unit = runTest("../files/run/t9349")
  @Test def `t9359`(): Unit = runTest("../files/run/t9359")
  @Test def `t9365`(): Unit = runTest("../files/run/t9365.scala")
  @Test def `t9375`(): Unit = runTest("../files/run/t9375.scala")
  @Test def `t9387`(): Unit = runTest("../files/run/t9387.scala")
  @Test def `t9387b`(): Unit = runTest("../files/run/t9387b.scala")
  @Test def `t9403`(): Unit = runTest("../files/run/t9403")
  @Test def `t9408`(): Unit = runTest("../files/run/t9408.scala")
  @Test def `t9422`(): Unit = runTest("../files/run/t9422.scala")
  @Test def `t9425`(): Unit = runTest("../files/run/t9425.scala")
  @Test def `t9437a`(): Unit = runTest("../files/run/t9437a")
  @Test def `t9437b`(): Unit = runTest("../files/run/t9437b")
  @Test def `t9437c`(): Unit = runTest("../files/run/t9437c")
  @Test def `t9489`(): Unit = runTest("../files/run/t9489")
  @Test def `t949`(): Unit = runTest("../files/run/t949.scala")
  @Test def `t9516`(): Unit = runTest("../files/run/t9516.scala")
  @Test def `t9535`(): Unit = runTest("../files/run/t9535.scala")
  @Test def `t9546`(): Unit = runTest("../files/run/t9546.scala")
  @Test def `t9546b`(): Unit = runTest("../files/run/t9546b.scala")
  @Test def `t9546c`(): Unit = runTest("../files/run/t9546c.scala")
  @Test def `t9546d`(): Unit = runTest("../files/run/t9546d.scala")
  @Test def `t9546e`(): Unit = runTest("../files/run/t9546e.scala")
  @Test def `t9567`(): Unit = runTest("../files/run/t9567.scala")
  @Test def `t9567b`(): Unit = runTest("../files/run/t9567b.scala")
  @Test def `t9567c`(): Unit = runTest("../files/run/t9567c.scala")
  @Test def `t9656`(): Unit = runTest("../files/run/t9656.scala")
  @Test def `t9749-repl-dot`(): Unit = runTest("../files/run/t9749-repl-dot.scala")
  @Test def `t978`(): Unit = runTest("../files/run/t978.scala")
  @Test def `tailcalls`(): Unit = runTest("../files/run/tailcalls.scala")
  @Test def `takeAndDrop`(): Unit = runTest("../files/run/takeAndDrop.scala")
  @Test def `tcpoly_monads`(): Unit = runTest("../files/run/tcpoly_monads.scala")
  @Test def `tcpoly_overriding`(): Unit = runTest("../files/run/tcpoly_overriding.scala")
  @Test def `tcpoly_parseridioms`(): Unit = runTest("../files/run/tcpoly_parseridioms.scala")
  @Test def `toolbox-varargs`(): Unit = runTest("../files/run/toolbox-varargs")
  @Test def `toolbox_console_reporter`(): Unit = runTest("../files/run/toolbox_console_reporter.scala")
  @Test def `toolbox_current_run_compiles`(): Unit = runTest("../files/run/toolbox_current_run_compiles.scala")
  @Test def `toolbox_default_reporter_is_silent`(): Unit = runTest("../files/run/toolbox_default_reporter_is_silent.scala")
  @Test def `toolbox_expand_macro`(): Unit = runTest("../files/run/toolbox_expand_macro.scala")
  @Test def `toolbox_parse_package`(): Unit = runTest("../files/run/toolbox_parse_package.scala")
  @Test def `toolbox_silent_reporter`(): Unit = runTest("../files/run/toolbox_silent_reporter.scala")
  @Test def `toolbox_typecheck_implicitsdisabled`(): Unit = runTest("../files/run/toolbox_typecheck_implicitsdisabled.scala")
  @Test def `toolbox_typecheck_inferimplicitvalue`(): Unit = runTest("../files/run/toolbox_typecheck_inferimplicitvalue.scala")
  @Test def `toolbox_typecheck_macrosdisabled`(): Unit = runTest("../files/run/toolbox_typecheck_macrosdisabled.scala")
  @Test def `toolbox_typecheck_macrosdisabled2`(): Unit = runTest("../files/run/toolbox_typecheck_macrosdisabled2.scala")
  @Test def `tpeCache-tyconCache`(): Unit = runTest("../files/run/tpeCache-tyconCache.scala")
  @Test def `trait-clonable`(): Unit = runTest("../files/run/trait-clonable.scala")
  @Test def `trait-default-specialize`(): Unit = runTest("../files/run/trait-default-specialize.scala")
  @Test def `trait-defaults-modules`(): Unit = runTest("../files/run/trait-defaults-modules.scala")
  @Test def `trait-defaults-modules2`(): Unit = runTest("../files/run/trait-defaults-modules2")
  @Test def `trait-defaults-modules3`(): Unit = runTest("../files/run/trait-defaults-modules3.scala")
  @Test def `trait-static-forwarder`(): Unit = runTest("../files/run/trait-static-forwarder")
  @Test def `transform`(): Unit = runTest("../files/run/transform.scala")
  @Test def `transpose`(): Unit = runTest("../files/run/transpose.scala")
  @Test def `treePrint`(): Unit = runTest("../files/run/treePrint.scala")
  @Test def `triemap-hash`(): Unit = runTest("../files/run/triemap-hash.scala")
  @Test def `triple-quoted-expr`(): Unit = runTest("../files/run/triple-quoted-expr.scala")
  @Test def `try-2`(): Unit = runTest("../files/run/try-2.scala")
  @Test def `try-catch-unify`(): Unit = runTest("../files/run/try-catch-unify.scala")
  @Test def `try`(): Unit = runTest("../files/run/try.scala")
  @Test def `tuple-match`(): Unit = runTest("../files/run/tuple-match.scala")
  @Test def `tuple-zipped`(): Unit = runTest("../files/run/tuple-zipped.scala")
  @Test def `tuples`(): Unit = runTest("../files/run/tuples.scala")
  @Test def `type-currying`(): Unit = runTest("../files/run/type-currying.scala")
  @Test def `typealias_overriding`(): Unit = runTest("../files/run/typealias_overriding.scala")
  @Test def `typecheck`(): Unit = runTest("../files/run/typecheck")
  @Test def `typed-annotated`(): Unit = runTest("../files/run/typed-annotated")
  @Test def `typetags_core`(): Unit = runTest("../files/run/typetags_core.scala")
  @Test def `typetags_multi`(): Unit = runTest("../files/run/typetags_multi.scala")
  @Test def `typetags_serialize`(): Unit = runTest("../files/run/typetags_serialize.scala")
  @Test def `typetags_symbolof_x`(): Unit = runTest("../files/run/typetags_symbolof_x.scala")
  @Test def `typetags_without_scala_reflect_manifest_lookup`(): Unit = runTest("../files/run/typetags_without_scala_reflect_manifest_lookup.scala")
  @Test def `typetags_without_scala_reflect_typetag_lookup`(): Unit = runTest("../files/run/typetags_without_scala_reflect_typetag_lookup.scala")
  @Test def `typetags_without_scala_reflect_typetag_manifest_interop`(): Unit = runTest("../files/run/typetags_without_scala_reflect_typetag_manifest_interop.scala")
  @Test def `unapply`(): Unit = runTest("../files/run/unapply.scala")
  @Test def `unapplyArray`(): Unit = runTest("../files/run/unapplyArray.scala")
  @Test def `unboxingBug`(): Unit = runTest("../files/run/unboxingBug.scala")
  @Test def `unittest_collection`(): Unit = runTest("../files/run/unittest_collection.scala")
  @Test def `unittest_iterator`(): Unit = runTest("../files/run/unittest_iterator.scala")
  @Test def `unreachable`(): Unit = runTest("../files/run/unreachable.scala")
  @Test def `UnrolledBuffer`(): Unit = runTest("../files/run/UnrolledBuffer.scala")
  @Test def `value-class-extractor-2`(): Unit = runTest("../files/run/value-class-extractor-2.scala")
  @Test def `value-class-extractor-seq`(): Unit = runTest("../files/run/value-class-extractor-seq.scala")
  @Test def `value-class-extractor`(): Unit = runTest("../files/run/value-class-extractor.scala")
  @Test def `value-class-partial-func-depmet`(): Unit = runTest("../files/run/value-class-partial-func-depmet.scala")
  @Test def `valueclasses-classmanifest-basic`(): Unit = runTest("../files/run/valueclasses-classmanifest-basic.scala")
  @Test def `valueclasses-classmanifest-existential`(): Unit = runTest("../files/run/valueclasses-classmanifest-existential.scala")
  @Test def `valueclasses-classmanifest-generic`(): Unit = runTest("../files/run/valueclasses-classmanifest-generic.scala")
  @Test def `valueclasses-classtag-basic`(): Unit = runTest("../files/run/valueclasses-classtag-basic.scala")
  @Test def `valueclasses-classtag-existential`(): Unit = runTest("../files/run/valueclasses-classtag-existential.scala")
  @Test def `valueclasses-classtag-generic`(): Unit = runTest("../files/run/valueclasses-classtag-generic.scala")
  @Test def `valueclasses-constr`(): Unit = runTest("../files/run/valueclasses-constr.scala")
  @Test def `valueclasses-manifest-basic`(): Unit = runTest("../files/run/valueclasses-manifest-basic.scala")
  @Test def `valueclasses-manifest-existential`(): Unit = runTest("../files/run/valueclasses-manifest-existential.scala")
  @Test def `valueclasses-manifest-generic`(): Unit = runTest("../files/run/valueclasses-manifest-generic.scala")
  @Test def `valueclasses-pavlov`(): Unit = runTest("../files/run/valueclasses-pavlov.scala")
  @Test def `valueclasses-typetag-basic`(): Unit = runTest("../files/run/valueclasses-typetag-basic.scala")
  @Test def `valueclasses-typetag-existential`(): Unit = runTest("../files/run/valueclasses-typetag-existential.scala")
  @Test def `valueclasses-typetag-generic`(): Unit = runTest("../files/run/valueclasses-typetag-generic.scala")
  @Test def `valueClassSelfType`(): Unit = runTest("../files/run/valueClassSelfType.scala")
  @Test def `var-arity-class-symbol`(): Unit = runTest("../files/run/var-arity-class-symbol.scala")
  @Test def `various-flat-classpath-types`(): Unit = runTest("../files/run/various-flat-classpath-types.scala")
  @Test def `vector1`(): Unit = runTest("../files/run/vector1.scala")
  @Test def `verify-ctor`(): Unit = runTest("../files/run/verify-ctor.scala")
  @Test def `view-headoption`(): Unit = runTest("../files/run/view-headoption.scala")
  @Test def `view-iterator-stream`(): Unit = runTest("../files/run/view-iterator-stream.scala")
  @Test def `viewtest`(): Unit = runTest("../files/run/viewtest.scala")
  @Test def `virtpatmat_alts`(): Unit = runTest("../files/run/virtpatmat_alts.scala")
  @Test def `virtpatmat_apply`(): Unit = runTest("../files/run/virtpatmat_apply.scala")
  @Test def `virtpatmat_casting`(): Unit = runTest("../files/run/virtpatmat_casting.scala")
  @Test def `virtpatmat_extends_product`(): Unit = runTest("../files/run/virtpatmat_extends_product.scala")
  @Test def `virtpatmat_literal`(): Unit = runTest("../files/run/virtpatmat_literal.scala")
  @Test def `virtpatmat_nested_lists`(): Unit = runTest("../files/run/virtpatmat_nested_lists.scala")
  @Test def `virtpatmat_npe`(): Unit = runTest("../files/run/virtpatmat_npe.scala")
  @Test def `virtpatmat_opt_sharing`(): Unit = runTest("../files/run/virtpatmat_opt_sharing.scala")
  @Test def `virtpatmat_partial`(): Unit = runTest("../files/run/virtpatmat_partial.scala")
  @Test def `virtpatmat_partial_backquoted`(): Unit = runTest("../files/run/virtpatmat_partial_backquoted.scala")
  @Test def `virtpatmat_staging`(): Unit = runTest("../files/run/virtpatmat_staging.scala")
  @Test def `virtpatmat_stringinterp`(): Unit = runTest("../files/run/virtpatmat_stringinterp.scala")
  @Test def `virtpatmat_switch`(): Unit = runTest("../files/run/virtpatmat_switch.scala")
  @Test def `virtpatmat_tailcalls_verifyerror`(): Unit = runTest("../files/run/virtpatmat_tailcalls_verifyerror.scala")
  @Test def `virtpatmat_try`(): Unit = runTest("../files/run/virtpatmat_try.scala")
  @Test def `virtpatmat_typed`(): Unit = runTest("../files/run/virtpatmat_typed.scala")
  @Test def `virtpatmat_typetag`(): Unit = runTest("../files/run/virtpatmat_typetag.scala")
  @Test def `virtpatmat_unapply`(): Unit = runTest("../files/run/virtpatmat_unapply.scala")
  @Test def `virtpatmat_unapplyprod`(): Unit = runTest("../files/run/virtpatmat_unapplyprod.scala")
  @Test def `virtpatmat_unapplyseq`(): Unit = runTest("../files/run/virtpatmat_unapplyseq.scala")
  @Test def `virtpatmat_valdef`(): Unit = runTest("../files/run/virtpatmat_valdef.scala")
  @Test def `weakconform`(): Unit = runTest("../files/run/weakconform.scala")
  @Test def `WeakHashSetTest`(): Unit = runTest("../files/run/WeakHashSetTest.scala")
  @Test def `withIndex`(): Unit = runTest("../files/run/withIndex.scala")
  @Test def `xMigration`(): Unit = runTest("../files/run/xMigration.scala")
}
