
scala> import scala.reflect.macros.blackbox.Context
import scala.reflect.macros.blackbox.Context

scala> import language.experimental.macros
import language.experimental.macros

scala> 

scala> def impl1(c: Context) = { import c.universe._; c.Expr[Unit](q"()") }
impl1: (c: scala.reflect.macros.blackbox.Context)c.Expr[Unit]

scala> def foo1: Unit = macro impl1
defined term macro foo1: Unit

scala> foo1

scala> 

scala> def impl2(c: Context)() = { import c.universe._; c.Expr[Unit](q"()") }
impl2: (c: scala.reflect.macros.blackbox.Context)()c.Expr[Unit]

scala> def foo2(): Unit = macro impl2
defined term macro foo2: ()Unit

scala> foo2()

scala> 

scala> def impl3(c: Context)(x: c.Expr[Int])(y: c.Expr[Int]) = { import c.universe._; c.Expr[Unit](q"()") }
impl3: (c: scala.reflect.macros.blackbox.Context)(x: c.Expr[Int])(y: c.Expr[Int])c.Expr[Unit]

scala> def foo3(x: Int)(y: Int): Unit = macro impl3
defined term macro foo3: (x: Int)(y: Int)Unit

scala> foo3(2)(3)

scala> 

scala> 

scala> import scala.reflect
import scala.reflect

scala> import scala.reflect.macros.{ blackbox, whitebox }
import scala.reflect.macros.{blackbox, whitebox}

scala> 

scala> def implBBC(c: blackbox.Context)                                = c.universe.reify(())
implBBC: (c: scala.reflect.macros.blackbox.Context)c.universe.Expr[Unit]

scala> def implWBC(c: whitebox.Context)                                = c.universe.reify(())
implWBC: (c: scala.reflect.macros.whitebox.Context)c.universe.Expr[Unit]

scala> def implRBBC(c: reflect.macros.blackbox.Context)                = c.universe.reify(())
implRBBC: (c: scala.reflect.macros.blackbox.Context)c.universe.Expr[Unit]

scala> def implRWBC(c: reflect.macros.whitebox.Context)                = c.universe.reify(())
implRWBC: (c: scala.reflect.macros.whitebox.Context)c.universe.Expr[Unit]

scala> def implSRBBC(c: scala.reflect.macros.blackbox.Context)         = c.universe.reify(())
implSRBBC: (c: scala.reflect.macros.blackbox.Context)c.universe.Expr[Unit]

scala> def implSRWBC(c: scala.reflect.macros.whitebox.Context)         = c.universe.reify(())
implSRWBC: (c: scala.reflect.macros.whitebox.Context)c.universe.Expr[Unit]

scala> def implRSRBBC(c: _root_.scala.reflect.macros.blackbox.Context) = c.universe.reify(())
implRSRBBC: (c: scala.reflect.macros.blackbox.Context)c.universe.Expr[Unit]

scala> def implRSRWBC(c: _root_.scala.reflect.macros.whitebox.Context) = c.universe.reify(())
implRSRWBC: (c: scala.reflect.macros.whitebox.Context)c.universe.Expr[Unit]

scala> 

scala> def fooBBC: Unit    = macro implBBC
defined term macro fooBBC: Unit

scala> def fooWBC: Unit    = macro implWBC
defined term macro fooWBC: Unit

scala> def fooRBBC: Unit   = macro implRBBC
defined term macro fooRBBC: Unit

scala> def fooRWBC: Unit   = macro implRWBC
defined term macro fooRWBC: Unit

scala> def fooSRBBC: Unit  = macro implSRBBC
defined term macro fooSRBBC: Unit

scala> def fooSRWBC: Unit  = macro implSRWBC
defined term macro fooSRWBC: Unit

scala> def fooRSRBBC: Unit = macro implRSRBBC
defined term macro fooRSRBBC: Unit

scala> def fooRSRWBC: Unit = macro implRSRWBC
defined term macro fooRSRWBC: Unit

scala> 

scala> fooBBC

scala> fooWBC

scala> fooRBBC

scala> fooRWBC

scala> fooSRBBC

scala> fooSRWBC

scala> fooRSRBBC

scala> fooRSRWBC

scala> 

scala> 

scala> object MacrosModule {
  def implBBC(c: blackbox.Context)                                = c.universe.reify(())
  def implWBC(c: whitebox.Context)                                = c.universe.reify(())
  def implRBBC(c: reflect.macros.blackbox.Context)                = c.universe.reify(())
  def implRWBC(c: reflect.macros.whitebox.Context)                = c.universe.reify(())
  def implSRBBC(c: scala.reflect.macros.blackbox.Context)         = c.universe.reify(())
  def implSRWBC(c: scala.reflect.macros.whitebox.Context)         = c.universe.reify(())
  def implRSRBBC(c: _root_.scala.reflect.macros.blackbox.Context) = c.universe.reify(())
  def implRSRWBC(c: _root_.scala.reflect.macros.whitebox.Context) = c.universe.reify(())
}
defined object MacrosModule

scala> 

scala> def barBBC: Unit    = macro MacrosModule.implBBC
defined term macro barBBC: Unit

scala> def barWBC: Unit    = macro MacrosModule.implWBC
defined term macro barWBC: Unit

scala> def barRBBC: Unit   = macro MacrosModule.implRBBC
defined term macro barRBBC: Unit

scala> def barRWBC: Unit   = macro MacrosModule.implRWBC
defined term macro barRWBC: Unit

scala> def barSRBBC: Unit  = macro MacrosModule.implSRBBC
defined term macro barSRBBC: Unit

scala> def barSRWBC: Unit  = macro MacrosModule.implSRWBC
defined term macro barSRWBC: Unit

scala> def barRSRBBC: Unit = macro MacrosModule.implRSRBBC
defined term macro barRSRBBC: Unit

scala> def barRSRWBC: Unit = macro MacrosModule.implRSRWBC
defined term macro barRSRWBC: Unit

scala> 

scala> barBBC

scala> barWBC

scala> barRBBC

scala> barRWBC

scala> barSRBBC

scala> barSRWBC

scala> barRSRBBC

scala> barRSRWBC

scala> 

scala> 

scala> class MacroBundleBBC(val c: blackbox.Context)                                { def impl = c.universe.reify(()) }
defined class MacroBundleBBC

scala> class MacroBundleWBC(val c: whitebox.Context)                                { def impl = c.universe.reify(()) }
defined class MacroBundleWBC

scala> class MacroBundleRBBC(val c: reflect.macros.blackbox.Context)                { def impl = c.universe.reify(()) }
defined class MacroBundleRBBC

scala> class MacroBundleRWBC(val c: reflect.macros.whitebox.Context)                { def impl = c.universe.reify(()) }
defined class MacroBundleRWBC

scala> class MacroBundleSRBBC(val c: scala.reflect.macros.blackbox.Context)         { def impl = c.universe.reify(()) }
defined class MacroBundleSRBBC

scala> class MacroBundleSRWBC(val c: scala.reflect.macros.whitebox.Context)         { def impl = c.universe.reify(()) }
defined class MacroBundleSRWBC

scala> class MacroBundleRSRBBC(val c: _root_.scala.reflect.macros.blackbox.Context) { def impl = c.universe.reify(()) }
defined class MacroBundleRSRBBC

scala> class MacroBundleRSRWBC(val c: _root_.scala.reflect.macros.whitebox.Context) { def impl = c.universe.reify(()) }
defined class MacroBundleRSRWBC

scala> 

scala> def bazBBC: Unit    = macro MacroBundleBBC.impl
defined term macro bazBBC: Unit

scala> def bazWBC: Unit    = macro MacroBundleWBC.impl
defined term macro bazWBC: Unit

scala> def bazRBBC: Unit   = macro MacroBundleRBBC.impl
defined term macro bazRBBC: Unit

scala> def bazRWBC: Unit   = macro MacroBundleRWBC.impl
defined term macro bazRWBC: Unit

scala> def bazSRBBC: Unit  = macro MacroBundleSRBBC.impl
defined term macro bazSRBBC: Unit

scala> def bazSRWBC: Unit  = macro MacroBundleSRWBC.impl
defined term macro bazSRWBC: Unit

scala> def bazRSRBBC: Unit = macro MacroBundleRSRBBC.impl
defined term macro bazRSRBBC: Unit

scala> def bazRSRWBC: Unit = macro MacroBundleRSRWBC.impl
defined term macro bazRSRWBC: Unit

scala> 

scala> bazBBC

scala> bazWBC

scala> bazRBBC

scala> bazRWBC

scala> bazSRBBC

scala> bazSRWBC

scala> bazRSRBBC

scala> bazRSRWBC

scala> :quit
